{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/addTemplate.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rId: 1\n    };\n    this.apiCall = this.apiCall.bind(this);\n    this.addRecipient = this.addRecipient.bind(this);\n    this.check = this.check.bind(this);\n  }\n\n  check() {\n    console.log(document.getElementById(\"templateName\").value);\n    if (document.getElementById(\"templateName\").value === \"\" || document.getElementById(\"text\").value === \"\") return false;\n\n    for (let i = 1; i <= this.state.rId; i++) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(document.getElementById(\"recipients\" + i).value)) return true;\n    }\n\n    alert(\"You have entered an invalid email address!\");\n    return false;\n  }\n\n  async apiCall() {\n    if (this.check()) {\n      let mail = [];\n\n      for (let i = 1; i <= this.state.rId; i++) {\n        mail.push(document.getElementById(\"recipients\" + i).value);\n      }\n\n      await fetch(\"/addTemplate\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          templateName: document.getElementById(\"templateName\").value,\n          templateText: document.getElementById(\"text\").value,\n          recipient: mail,\n          title: document.getElementById(\"title\").value,\n          from: document.getElementById(\"from\").value\n        })\n      });\n    } else {\n      console.log(\"error\");\n    }\n  }\n\n  async addRecipient() {\n    const input = document.createElement(\"input\");\n    const delButton = document.createElement(\"button\");\n    const div = document.createElement(\"div\");\n    await this.setState({\n      rId: this.state.rId + 1\n    });\n    div.style.display = \"flex\";\n    div.className = \"addRecDiv\";\n    input.id = \"recipients\" + this.state.rId;\n    input.style.display = \"flex\";\n    input.className = \"formInputRec\";\n    delButton.className = \"delButRec\";\n    delButton.type = \"button\";\n    delButton.id = \"del\" + this.state.rId;\n    delButton.innerHTML = \"X\";\n\n    delButton.onclick = () => {\n      input.parentNode.removeChild(input);\n      delButton.style.display = \"none\";\n    };\n\n    const bigDiv = document.getElementById(\"addRecBigDiv\");\n    div.appendChild(input);\n    div.appendChild(delButton);\n    bigDiv.appendChild(div);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"addBox\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addForm\",\n        onSubmit: e => {\n          e.preventDefault(); //window.history.replaceState(null, '', \"/\")\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"templateName\",\n            className: \"form\",\n            children: \"Template*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"templateName\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"from\",\n            className: \"form\",\n            children: \"from\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"from\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipients1\",\n            className: \"form\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"recipients1\",\n            type: \"email\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"addRec\",\n            className: \"form\",\n            type: \"button\",\n            onClick: () => this.addRecipient(),\n            children: \"Add Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"addRecBigDiv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"titleDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"titleLabel\",\n            htmlFor: \"title\",\n            className: \"form\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"textDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            className: \"form\",\n            children: \"Text*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"submit\",\n          className: \"form\",\n          onClick: () => this.apiCall(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/addTemplate.js"],"names":["React","Component","AddTemplate","constructor","props","state","rId","apiCall","bind","addRecipient","check","console","log","document","getElementById","value","i","test","alert","mail","push","fetch","method","headers","body","JSON","stringify","templateName","templateText","recipient","title","from","input","createElement","delButton","div","setState","style","display","className","id","type","innerHTML","onclick","parentNode","removeChild","bigDiv","appendChild","render","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nclass AddTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            rId: 1\n        }\n        this.apiCall = this.apiCall.bind(this)\n        this.addRecipient = this.addRecipient.bind(this)\n        this.check = this.check.bind(this)\n    }\n\n    check(){\n        console.log(document.getElementById(\"templateName\").value)\n        if (document.getElementById(\"templateName\").value === \"\" ||\n            document.getElementById(\"text\").value === \"\") return false\n        for (let i = 1; i <= this.state.rId; i++) {\n            if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(document.getElementById(\"recipients\" + i).value))  return true\n        }\n        alert(\"You have entered an invalid email address!\")\n        return false\n    }\n\n    async apiCall(){\n        if (this.check()) {\n            let mail = []\n            for (let i = 1; i <= this.state.rId; i++) {\n                mail.push(document.getElementById(\"recipients\" + i).value)\n            }\n            await fetch(\"/addTemplate\", {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    templateName: document.getElementById(\"templateName\").value,\n                    templateText: document.getElementById(\"text\").value,\n                    recipient: mail,\n                    title: document.getElementById(\"title\").value,\n                    from: document.getElementById(\"from\").value\n                })\n            })\n        }\n        else {\n            console.log(\"error\")\n        }\n    }\n\n    async addRecipient(){\n        const input = document.createElement(\"input\")\n        const delButton = document.createElement(\"button\")\n        const div = document.createElement(\"div\")\n        await this.setState({rId : this.state.rId + 1})\n        div.style.display =\"flex\"\n        div.className = \"addRecDiv\"\n        input.id = \"recipients\" + this.state.rId\n        input.style.display = \"flex\"\n        input.className = \"formInputRec\"\n        delButton.className = \"delButRec\"\n        delButton.type = \"button\"\n        delButton.id = \"del\" + this.state.rId\n        delButton.innerHTML = \"X\"\n        delButton.onclick = () => {\n            input.parentNode.removeChild(input)\n            delButton.style.display = \"none\"\n        }\n        const bigDiv = document.getElementById(\"addRecBigDiv\")\n        div.appendChild(input)\n        div.appendChild(delButton)\n        bigDiv.appendChild(div)\n    }\n\n    render() {\n        return(\n            <div id={\"addBox\"}>\n                <form id={\"addForm\"} onSubmit={e => {\n                    e.preventDefault()\n                    //window.history.replaceState(null, '', \"/\")\n                }}>\n                    <div>\n                        <label htmlFor=\"templateName\" className={\"form\"}>Template*</label>\n                        <input id=\"templateName\" className={\"form\"}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"from\" className={\"form\"}>from</label>\n                        <input id=\"from\" className={\"form\"}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"recipients1\" className={\"form\"}>To</label>\n                        <input id=\"recipients1\" type=\"email\" className={\"form\"}/>\n                        <button id={\"addRec\"} className={\"form\"} type={\"button\"} onClick={() => this.addRecipient()}>Add Recipient</button>\n                    </div>\n                    <div id={\"addRecBigDiv\"}>\n\n                    </div>\n                    <div id={\"titleDiv\"}>\n                        <label id={\"titleLabel\"} htmlFor=\"title\" className={\"form\"}>title</label>\n                        <input id=\"title\" className={\"form\"}/>\n                    </div>\n                    <div id={\"textDiv\"}>\n                        <label htmlFor=\"text\" className={\"form\"}>Text*</label>\n                        <textarea id={\"text\"} className={\"form\"}/>\n                    </div>\n                    <button type={\"submit\"} id={\"submit\"} className={\"form\"} onClick={() => this.apiCall()}>Add</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddTemplate"]},"metadata":{},"sourceType":"module"}