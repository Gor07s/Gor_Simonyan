{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/sendTemplate.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SendTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: props.ifShow,\n      text: this.txt,\n      variables: {},\n      template: props.template,\n      recipients: props.recipients\n    };\n    this.txt = this.state.template.templateText;\n    this.wordsForCheck = [];\n    this.arr = [];\n    this.vars = props.vars;\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n    this.sendMail = this.sendMail.bind(this);\n    this.textGenerator = this.textGenerator.bind(this);\n    this.wordFinder = this.wordFinder.bind(this);\n\n    if (this.state.show) {\n      this.UseTemplateFunc();\n    }\n  }\n\n  wordFinder(word) {\n    let start = null;\n    let st = 0;\n\n    if (word.includes(\"{\") && word.includes(\"}\")) {\n      for (let i = 0; i < word.length; i++) {\n        if (word[0] !== \"{\") {\n          this.wordsForCheck.forEach(element => {\n            if (this.state.variables[element] === \"\") {\n              this.arr.push(\"{\" + element + \"}\");\n            } else {\n              this.arr.push(this.state.variables[element]);\n            }\n          });\n          this.wordsForCheck = [];\n        }\n\n        if (word[i] === \"{\") {\n          start = i;\n\n          if (st !== null) {\n            this.arr.push(word.replace(word.slice(i, word.length), \"\"));\n            word = word.replace(word.slice(st, i), \"\");\n            st = null;\n\n            if (start !== null) {\n              start = 0;\n            }\n          }\n        } else if (word[i] === \"}\") {\n          if (start !== null) {\n            this.wordsForCheck.splice(0, 0, word.slice(start + 1, i));\n            let newWord = word.replace(word.slice(start, i + 1), \"\");\n            this.wordFinder(newWord);\n            return;\n          }\n        }\n      }\n    } else {\n      this.wordsForCheck.forEach(element => {\n        if (this.state.variables[element] === \"\") {\n          this.arr.push(\"{\" + element + \"}\");\n        } else {\n          this.arr.push(this.state.variables[element]);\n        }\n      });\n      this.wordsForCheck = [];\n      this.arr.push(word);\n    }\n  }\n\n  textGenerator() {\n    const text = this.txt.split(\" \");\n\n    for (let i = 1; i <= text.length; i += 2) {\n      text.splice(i, 0, \" \");\n    }\n\n    text.forEach(word => {\n      this.wordFinder(word, []);\n    });\n  }\n\n  async UseTemplateFunc() {\n    const form = document.getElementById(\"sendForm\");\n    const textLabel = document.getElementById(\"textLabel\");\n    await this.vars.forEach(v => {\n      const copy = Object.assign(this.state.variables, {\n        [v.varName]: \"{\" + [v.varName] + \"}\"\n      });\n      this.setState({\n        variables: copy\n      });\n    });\n    await this.vars.forEach((template, index) => {\n      const form = document.getElementById(\"sendForm\");\n      const label = document.createElement(\"label\");\n      const input = document.createElement(\"input\");\n      input.id = \"t\" + (index + 1);\n\n      input.onchange = e => {\n        this.setState(prevState => ({\n          variables: { ...prevState.variables,\n            [template.varName]: e.target.value\n          }\n        }));\n        this.textGenerator();\n        let txt = \"\";\n        this.arr.forEach(v => txt += v);\n        this.arr = [];\n        this.setState({\n          text: txt\n        });\n      };\n\n      label.innerHTML = template.varName;\n      label.htmlFor = \"t\" + (index + 1);\n      label.style.display = \"block\";\n      form.appendChild(label);\n      form.appendChild(input);\n      form.insertBefore(input, textLabel);\n      form.insertBefore(label, input);\n    });\n  }\n\n  sendMail() {\n    const from = document.getElementById(\"from\").value;\n    const to = document.getElementById(\"to\").value;\n    const title = document.getElementById(\"title\").value;\n    const text = document.getElementById(\"text\").value;\n    fetch(\"/useTemplate/send\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: \"gorsimonyan200307@gmail.com\",\n        pass: \"gor07072003\",\n        from: from,\n        to: to,\n        subject: title,\n        text: text\n      })\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"sendForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"from\",\n          className: \"form\",\n          children: \"from\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"from\",\n          type: \"email\",\n          className: \"form\",\n          value: this.state.template.templateFrom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          className: \"form\",\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"to\",\n          type: \"email\",\n          className: \"form\",\n          value: this.state.recipients.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          className: \"form\",\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          className: \"form\",\n          value: this.state.template.templateTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          className: \"form\",\n          id: \"textLabel\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"text\",\n          value: this.state.text,\n          className: \"form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"form\",\n          onClick: this.sendMail,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SendTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/sendTemplate.js"],"names":["React","Component","SendTemplate","constructor","props","state","show","ifShow","text","txt","variables","template","recipients","templateText","wordsForCheck","arr","vars","UseTemplateFunc","bind","sendMail","textGenerator","wordFinder","word","start","st","includes","i","length","forEach","element","push","replace","slice","splice","newWord","split","form","document","getElementById","textLabel","v","copy","Object","assign","varName","setState","index","label","createElement","input","id","onchange","e","prevState","target","value","innerHTML","htmlFor","style","display","appendChild","insertBefore","from","to","title","fetch","method","headers","body","JSON","stringify","user","pass","subject","then","res","apiResponse","render","templateFrom","email","templateTitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nclass SendTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            show: props.ifShow,\n            text: this.txt,\n            variables: {},\n            template: props.template,\n            recipients : props.recipients\n        }\n        this.txt = this.state.template.templateText\n        this.wordsForCheck = []\n        this.arr = []\n        this.vars = props.vars\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n        this.sendMail = this.sendMail.bind(this)\n        this.textGenerator = this.textGenerator.bind(this)\n        this.wordFinder = this.wordFinder.bind(this)\n        if (this.state.show){\n            this.UseTemplateFunc()\n        }\n    }\n\n    wordFinder(word){\n        let start = null\n        let st = 0\n        if(word.includes(\"{\") && word.includes(\"}\")) {\n            for (let i = 0; i < word.length; i++) {\n                if (word[0] !== \"{\"){\n                    this.wordsForCheck.forEach(element => {\n                        if(this.state.variables[element] === \"\"){\n                            this.arr.push(\"{\" + element + \"}\")\n                        }\n                        else {\n                            this.arr.push(this.state.variables[element])\n                        }\n                    })\n                    this.wordsForCheck = []\n                }\n                if (word[i] === \"{\") {\n                    start = i\n                    if (st !== null){\n                        this.arr.push(word.replace(word.slice(i, word.length), \"\"))\n                        word = word.replace(word.slice(st, i), \"\")\n                        st = null\n                        if (start !== null){\n                            start = 0\n                        }\n                    }\n                }\n                else if (word[i] === \"}\") {\n                    if (start !== null) {\n                        this.wordsForCheck.splice(0, 0, word.slice(start + 1, i))\n                        let newWord = word.replace(word.slice(start, i + 1), \"\")\n                        this.wordFinder(newWord)\n                        return\n                    }\n                }\n            }\n        }\n        else {\n            this.wordsForCheck.forEach(element => {\n                if(this.state.variables[element] === \"\"){\n                    this.arr.push(\"{\" + element + \"}\")\n                }\n                else {\n                    this.arr.push(this.state.variables[element])\n                }\n            })\n            this.wordsForCheck = []\n            this.arr.push(word)\n        }\n    }\n\n    textGenerator(){\n        const text = this.txt.split(\" \")\n        for(let i = 1; i <= text.length; i+=2){\n            text.splice(i, 0, \" \")\n        }\n        text.forEach(word => {\n            this.wordFinder(word, [])\n        })\n    }\n\n    async UseTemplateFunc(){\n        const form = document.getElementById(\"sendForm\")\n        const textLabel = document.getElementById(\"textLabel\")\n        await this.vars.forEach(v => {\n            const copy = Object.assign(this.state.variables, {[v.varName]: \"{\" + [v.varName] + \"}\"})\n            this.setState({variables : copy})\n        })\n        await this.vars.forEach((template, index) => {\n            const form = document.getElementById(\"sendForm\")\n            const label = document.createElement(\"label\")\n            const input = document.createElement(\"input\")\n            input.id = \"t\" + (index + 1)\n            input.onchange = (e) => {\n                this.setState(prevState => ({\n                    variables : {\n                        ...prevState.variables,\n                        [template.varName] : e.target.value\n                    }\n                }))\n                this.textGenerator()\n                let txt = \"\"\n                this.arr.forEach(v => txt += v)\n                this.arr = []\n                this.setState({text: txt})\n            }\n            label.innerHTML = template.varName\n            label.htmlFor = \"t\" + (index + 1)\n            label.style.display = \"block\"\n            form.appendChild(label)\n            form.appendChild(input)\n            form.insertBefore(input, textLabel)\n            form.insertBefore(label, input)\n        })\n    }\n\n    sendMail(){\n        const from = document.getElementById(\"from\").value\n        const to = document.getElementById(\"to\").value\n        const title = document.getElementById(\"title\").value\n        const text = document.getElementById(\"text\").value\n        fetch(\"/useTemplate/send\", {\n            method:'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                user: \"gorsimonyan200307@gmail.com\",\n                pass: \"gor07072003\",\n                from: from,\n                to: to,\n                subject: title,\n                text: text\n            })\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n    }\n\n    render() {\n        return (\n            <div>\n                <form id={\"sendForm\"} >\n                    <label htmlFor=\"from\" className=\"form\">from</label>\n                    <input id={\"from\"} type=\"email\" className=\"form\" value={this.state.template.templateFrom}/>\n                    <label htmlFor={\"to\"} className=\"form\">To</label>\n                    <input id={\"to\"} type=\"email\" className=\"form\" value={this.state.recipients.email}/>\n                    <label htmlFor={\"title\"} className=\"form\">title</label>\n                    <input id={\"title\"} className=\"form\" value={this.state.template.templateTitle}/>\n                    <label htmlFor={\"text\"} className={\"form\"} id={\"textLabel\"}>Text</label>\n                    <input id={\"text\"} value={this.state.text} className={\"form\"}/>\n                    <button id={\"submit\"} type={\"submit\"} className={\"form\"} onClick={this.sendMail}>Send</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SendTemplate"]},"metadata":{},"sourceType":"module"}