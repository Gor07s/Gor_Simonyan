{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/modTemplate.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: props.show,\n      variables: {},\n      template: props.template,\n      txt: props.template.templateText,\n      text: props.template.templateText,\n      recipients: props.recipients,\n      recCount: 1,\n      from: props.template.templateFrom\n    };\n    this.wordsForCheck = [];\n    this.arr = [];\n    this.vars = props.vars;\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n    this.modTemp = this.modTemp.bind(this);\n    this.textGenerator = this.textGenerator.bind(this);\n    this.wordFinder = this.wordFinder.bind(this);\n    this.addRecipient = this.addRecipient.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  wordFinder(word) {\n    let start = null;\n    let st = 0;\n\n    if (word.includes(\"{\") && word.includes(\"}\")) {\n      for (let i = 0; i < word.length; i++) {\n        if (word[0] !== \"{\") {\n          this.wordsForCheck.forEach(element => {\n            if (this.state.variables[element] === \"\") {\n              this.arr.push(\"{\" + element + \"}\");\n            } else {\n              this.arr.push(this.state.variables[element]);\n            }\n          });\n          this.wordsForCheck = [];\n        }\n\n        if (word[i] === \"{\") {\n          start = i;\n\n          if (st !== null) {\n            this.arr.push(word.replace(word.slice(i, word.length), \"\"));\n            word = word.replace(word.slice(st, i), \"\");\n            st = null;\n\n            if (start !== null) {\n              start = 0;\n            }\n          }\n        } else if (word[i] === \"}\") {\n          if (start !== null) {\n            this.wordsForCheck.splice(0, 0, word.slice(start + 1, i));\n            let newWord = word.replace(word.slice(start, i + 1), \"\");\n            this.wordFinder(newWord);\n            return;\n          }\n        }\n      }\n    } else {\n      this.wordsForCheck.forEach(element => {\n        if (this.state.variables[element] === \"\") {\n          this.arr.push(\"{\" + element + \"}\");\n        } else {\n          this.arr.push(this.state.variables[element]);\n        }\n      });\n      this.wordsForCheck = [];\n      this.arr.push(word);\n    }\n  }\n\n  textGenerator() {\n    const text = this.state.txt.split(\" \");\n\n    for (let i = 1; i <= text.length; i += 2) {\n      text.splice(i, 0, \" \");\n    }\n\n    text.forEach(word => {\n      this.wordFinder(word, []);\n    });\n  }\n\n  async UseTemplateFunc() {\n    const div = document.getElementById(\"forVars\");\n    await this.vars.forEach(v => {\n      const copy = Object.assign(this.state.variables, {\n        [v.varName]: \"{\" + [v.varName] + \"}\"\n      });\n      this.setState({\n        variables: copy\n      });\n    });\n    await this.vars.forEach((template, index) => {\n      const label = document.createElement(\"label\");\n      const input = document.createElement(\"input\");\n      const newDiv = document.createElement(\"div\");\n      input.id = \"t\" + (index + 1);\n\n      input.onchange = e => {\n        this.setState(prevState => ({\n          variables: { ...prevState.variables,\n            [template.varName]: e.target.value\n          }\n        }));\n        this.textGenerator();\n        let txt = \"\";\n        this.arr.forEach(v => txt += v);\n        this.arr = [];\n        this.setState({\n          text: txt\n        });\n      };\n\n      label.innerHTML = template.varName;\n      label.htmlFor = \"t\" + (index + 1);\n      newDiv.appendChild(label);\n      newDiv.appendChild(input);\n      div.appendChild(newDiv);\n    });\n    const div2 = document.getElementById(\"addRecBigDiv\");\n    await this.state.recipients.forEach((rec, index) => {\n      if (index !== 0) {\n        const input = document.createElement(\"input\");\n        const button = document.createElement(\"button\");\n        const div = document.createElement(\"div\");\n        input.value = rec;\n        div.className = \"addRecDiv\";\n        div.style.display = \"flex\";\n        this.setState({\n          recCount: this.state.recCount + 1\n        });\n        input.id = \"to\" + this.state.recCount;\n        button.innerHTML = \"X\";\n        input.style.display = \"flex\";\n        input.className = \"formInputRec\";\n        button.className = \"delButRec\";\n        button.type = \"button\";\n\n        button.onclick = () => {\n          input.parentNode.removeChild(input);\n          button.style.display = \"none\";\n        };\n\n        div.appendChild(input);\n        div.appendChild(button);\n        div2.appendChild(div);\n      }\n    });\n  }\n\n  async modTemp() {\n    let to = \"\";\n\n    for (let i = 1; i <= this.state.recCount; i++) {\n      const rec = document.getElementById(\"to\" + i).value;\n      to += rec;\n\n      if (i !== this.state.recCount) {\n        to += \",\";\n      }\n    }\n\n    await fetch(\"/useTemplate/mod\", {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: document.getElementById(\"templateName\").value,\n        from: document.getElementById(\"from\").value,\n        to: to,\n        subject: document.getElementById(\"title\").value,\n        text: document.getElementById(\"text\").value\n      })\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  async addRecipient() {\n    const input = document.createElement(\"input\");\n    const delButton = document.createElement(\"button\");\n    const div = document.createElement(\"div\");\n    await this.setState({\n      rId: this.state.rId + 1\n    });\n    div.style.display = \"flex\";\n    div.className = \"addRecDiv\";\n    input.id = \"recipients\" + this.state.rId;\n    input.style.display = \"flex\";\n    input.className = \"formInputRec\";\n    delButton.className = \"delButRec\";\n    delButton.type = \"button\";\n    delButton.id = \"del\" + this.state.rId;\n    delButton.innerHTML = \"X\";\n\n    delButton.onclick = () => {\n      input.parentNode.removeChild(input);\n      delButton.style.display = \"none\";\n    };\n\n    const bigDiv = document.getElementById(\"addRecBigDiv\");\n    div.appendChild(input);\n    div.appendChild(delButton);\n    bigDiv.appendChild(div);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sendBox\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"sendForm\",\n        onSubmit: e => {\n          e.preventDefault();\n          window.history.replaceState(null, '', \"/\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"templateName\",\n            className: \"form\",\n            children: \"Template*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"templateName\",\n            className: \"form\",\n            value: this.state.template.templateName,\n            onChange: e => {\n              this.setState(prevState => ({\n                template: { ...prevState.template,\n                  templateName: e.target.value\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"from\",\n            className: \"form\",\n            children: \"from\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"from\",\n            type: \"email\",\n            className: \"form\",\n            value: this.state.template.templateFrom,\n            onChange: e => {\n              this.setState(prevState => ({\n                template: { ...prevState.template,\n                  templateFrom: e.target.value\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"to\",\n            className: \"form\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"to1\",\n            type: \"email\",\n            className: \"form\",\n            value: this.state.recipients[0],\n            onChange: e => {\n              this.setState(prevState => ({\n                recipients: { ...prevState.recipients,\n                  [0]: e.target.value\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"addRec\",\n            onClick: () => this.addRecipient(),\n            children: \"Add Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"addRecBigDiv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"titleLabel\",\n            htmlFor: \"title\",\n            className: \"form\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            className: \"form\",\n            value: this.state.template.templateTitle,\n            onChange: e => {\n              this.setState(prevState => ({\n                template: { ...prevState.template,\n                  templateTitle: e.target.value\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"forVars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            className: \"form\",\n            id: \"textLabel\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            value: this.state.text,\n            className: \"form\",\n            onChange: e => this.setState({\n              text: e.target.value,\n              txt: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"form\",\n          onClick: this.modTemp,\n          children: \"Modify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/modTemplate.js"],"names":["React","Component","ModTemplate","constructor","props","state","show","variables","template","txt","templateText","text","recipients","recCount","from","templateFrom","wordsForCheck","arr","vars","UseTemplateFunc","bind","modTemp","textGenerator","wordFinder","addRecipient","componentDidMount","setState","componentDidUpdate","prevProps","prevState","snapshot","word","start","st","includes","i","length","forEach","element","push","replace","slice","splice","newWord","split","div","document","getElementById","v","copy","Object","assign","varName","index","label","createElement","input","newDiv","id","onchange","e","target","value","innerHTML","htmlFor","appendChild","div2","rec","button","className","style","display","type","onclick","parentNode","removeChild","to","fetch","method","headers","body","JSON","stringify","name","subject","then","res","apiResponse","delButton","rId","bigDiv","render","preventDefault","window","history","replaceState","templateName","templateTitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nclass ModTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            show: props.show,\n            variables: {},\n            template: props.template,\n            txt : props.template.templateText,\n            text: props.template.templateText,\n            recipients : props.recipients,\n            recCount: 1,\n            from: props.template.templateFrom\n        }\n        this.wordsForCheck = []\n        this.arr = []\n        this.vars = props.vars\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n        this.modTemp = this.modTemp.bind(this)\n        this.textGenerator = this.textGenerator.bind(this)\n        this.wordFinder = this.wordFinder.bind(this)\n        this.addRecipient = this.addRecipient.bind(this)\n    }\n\n    componentDidMount() {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    wordFinder(word){\n        let start = null\n        let st = 0\n        if(word.includes(\"{\") && word.includes(\"}\")) {\n            for (let i = 0; i < word.length; i++) {\n                if (word[0] !== \"{\"){\n                    this.wordsForCheck.forEach(element => {\n                        if(this.state.variables[element] === \"\"){\n                            this.arr.push(\"{\" + element + \"}\")\n                        }\n                        else {\n                            this.arr.push(this.state.variables[element])\n                        }\n                    })\n                    this.wordsForCheck = []\n                }\n                if (word[i] === \"{\") {\n                    start = i\n                    if (st !== null){\n                        this.arr.push(word.replace(word.slice(i, word.length), \"\"))\n                        word = word.replace(word.slice(st, i), \"\")\n                        st = null\n                        if (start !== null){\n                            start = 0\n                        }\n                    }\n                }\n                else if (word[i] === \"}\") {\n                    if (start !== null) {\n                        this.wordsForCheck.splice(0, 0, word.slice(start + 1, i))\n                        let newWord = word.replace(word.slice(start, i + 1), \"\")\n                        this.wordFinder(newWord)\n                        return\n                    }\n                }\n            }\n        }\n        else {\n            this.wordsForCheck.forEach(element => {\n                if(this.state.variables[element] === \"\"){\n                    this.arr.push(\"{\" + element + \"}\")\n                }\n                else {\n                    this.arr.push(this.state.variables[element])\n                }\n            })\n            this.wordsForCheck = []\n            this.arr.push(word)\n        }\n    }\n\n    textGenerator(){\n        const text = this.state.txt.split(\" \")\n        for(let i = 1; i <= text.length; i+=2){\n            text.splice(i, 0, \" \")\n        }\n        text.forEach(word => {\n            this.wordFinder(word, [])\n        })\n    }\n\n    async UseTemplateFunc(){\n        const div = document.getElementById(\"forVars\")\n        await this.vars.forEach(v => {\n            const copy = Object.assign(this.state.variables, {[v.varName]: \"{\" + [v.varName] + \"}\"})\n            this.setState({variables : copy})\n        })\n        await this.vars.forEach((template, index) => {\n            const label = document.createElement(\"label\")\n            const input = document.createElement(\"input\")\n            const newDiv = document.createElement(\"div\")\n            input.id = \"t\" + (index + 1)\n            input.onchange = (e) => {\n                this.setState(prevState => ({\n                    variables : {\n                        ...prevState.variables,\n                        [template.varName] : e.target.value\n                    }\n                }))\n                this.textGenerator()\n                let txt = \"\"\n                this.arr.forEach(v => txt += v)\n                this.arr = []\n                this.setState({text: txt})\n            }\n            label.innerHTML = template.varName\n            label.htmlFor = \"t\" + (index + 1)\n            newDiv.appendChild(label)\n            newDiv.appendChild(input)\n            div.appendChild(newDiv)\n        })\n        const div2= document.getElementById(\"addRecBigDiv\")\n        await this.state.recipients.forEach((rec, index) => {\n            if (index !== 0){\n                const input = document.createElement(\"input\")\n                const button = document.createElement(\"button\")\n                const div = document.createElement(\"div\")\n                input.value = rec\n                div.className = \"addRecDiv\"\n                div.style.display = \"flex\"\n                this.setState({recCount: this.state.recCount + 1})\n                input.id = \"to\" + this.state.recCount\n                button.innerHTML = \"X\"\n                input.style.display = \"flex\"\n                input.className = \"formInputRec\"\n                button.className = \"delButRec\"\n                button.type = \"button\"\n                button.onclick = () => {\n                    input.parentNode.removeChild(input)\n                    button.style.display = \"none\"\n                }\n                div.appendChild(input)\n                div.appendChild(button)\n                div2.appendChild(div)\n            }\n        })\n    }\n\n    async modTemp(){\n        let to = \"\"\n        for (let i = 1; i <= this.state.recCount; i++){\n            const rec = document.getElementById(\"to\" + i).value\n            to += rec\n            if (i !== this.state.recCount){\n                to += \",\"\n            }\n        }\n        await fetch(\"/useTemplate/mod\", {\n            method:'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                name: document.getElementById(\"templateName\").value,\n                from: document.getElementById(\"from\").value,\n                to: to,\n                subject: document.getElementById(\"title\").value,\n                text: document.getElementById(\"text\").value\n            })\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n    }\n\n    async addRecipient(){\n        const input = document.createElement(\"input\")\n        const delButton = document.createElement(\"button\")\n        const div = document.createElement(\"div\")\n        await this.setState({rId : this.state.rId + 1})\n        div.style.display =\"flex\"\n        div.className = \"addRecDiv\"\n        input.id = \"recipients\" + this.state.rId\n        input.style.display = \"flex\"\n        input.className = \"formInputRec\"\n        delButton.className = \"delButRec\"\n        delButton.type = \"button\"\n        delButton.id = \"del\" + this.state.rId\n        delButton.innerHTML = \"X\"\n        delButton.onclick = () => {\n            input.parentNode.removeChild(input)\n            delButton.style.display = \"none\"\n        }\n        const bigDiv = document.getElementById(\"addRecBigDiv\")\n        div.appendChild(input)\n        div.appendChild(delButton)\n        bigDiv.appendChild(div)\n    }\n\n    render() {\n        return (\n            <div  id={\"sendBox\"}>\n                <form id={\"sendForm\"} onSubmit={e => {\n                    e.preventDefault()\n                    window.history.replaceState(null, '', \"/\")\n                }}>\n                    <div>\n                        <label htmlFor=\"templateName\" className={\"form\"}>Template*</label>\n                        <input id=\"templateName\" className={\"form\"} value={this.state.template.templateName} onChange={(e) => {this.setState(prevState => ({\n                            template : {\n                                ...prevState.template,\n                                templateName : e.target.value\n                            }\n                        }))}}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"from\" className=\"form\">from</label>\n                        <input id={\"from\"} type=\"email\" className=\"form\" value={this.state.template.templateFrom} onChange={(e) => {this.setState(prevState => ({\n                            template : {\n                                ...prevState.template,\n                                templateFrom : e.target.value\n                            }\n                        }))}}/>\n                    </div>\n                    <div>\n                        <label htmlFor={\"to\"} className=\"form\">To</label>\n                        <input id={\"to1\"} type=\"email\" className=\"form\" value={this.state.recipients[0]} onChange={(e) => {this.setState(prevState => ({\n                            recipients: {\n                                ...prevState.recipients,\n                                [0]: e.target.value\n                            }\n                        }))}}/>\n                        <button type={\"button\"} id={\"addRec\"} onClick={() => this.addRecipient()}>Add Recipient</button>\n                    </div>\n                    <div id={\"addRecBigDiv\"}>\n\n                    </div>\n                    <div>\n                        <label id={\"titleLabel\"} htmlFor={\"title\"} className=\"form\">title</label>\n                        <input id={\"title\"} className=\"form\" value={this.state.template.templateTitle} onChange={(e) => {this.setState(prevState => ({\n                            template : {\n                                ...prevState.template,\n                                templateTitle : e.target.value\n                            }\n                        }))}}/>\n                    </div>\n                    <div id={\"forVars\"}>\n\n                    </div>\n                    <div>\n                        <label htmlFor={\"text\"} className={\"form\"} id={\"textLabel\"}>Text</label>\n                        <textarea id={\"text\"} value={this.state.text} className={\"form\"} onChange={(e) => this.setState({text: e.target.value, txt: e.target.value})}/>\n                    </div>\n                    <button id={\"submit\"} type={\"submit\"} className={\"form\"} onClick={this.modTemp}>Modify</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ModTemplate"]},"metadata":{},"sourceType":"module"}