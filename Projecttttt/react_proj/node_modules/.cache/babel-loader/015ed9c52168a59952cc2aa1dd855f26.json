{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/sendTemplate.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SendTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: props.show,\n      template: props.template[0],\n      txt: props.template[0].templateText,\n      text: props.template[0].templateText,\n      recipients: props.recipients,\n      recCount: 1,\n      checks: 0\n    };\n    this.texts = [];\n    this.wordsForCheck = [];\n    this.arr = [];\n    this.vars = props.vars;\n    this.varsIndividual = {};\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n    this.sendMail = this.sendMail.bind(this);\n    this.textGenerator = this.textGenerator.bind(this);\n    this.wordFinder = this.wordFinder.bind(this);\n    this.addRecipient = this.addRecipient.bind(this);\n    this.check = this.check.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  wordFinder(word, index) {\n    let start = null;\n    let st = 0;\n\n    if (word.includes(\"{\") && word.includes(\"}\")) {\n      for (let i = 0; i < word.length; i++) {\n        if (word[0] !== \"{\") {\n          this.wordsForCheck.forEach(element => {\n            let varInd = this.varsIndividual[element][index];\n\n            if (varInd === undefined) {\n              varInd = this.varsIndividual[element][0];\n            }\n\n            if (varInd === \"\") {\n              this.arr.push(\"{\" + element + \"}\");\n            } else {\n              this.arr.push(varInd);\n            }\n          });\n          this.wordsForCheck = [];\n        }\n\n        if (word[i] === \"{\") {\n          start = i;\n\n          if (st !== null) {\n            this.arr.push(word.replace(word.slice(i, word.length), \"\"));\n            word = word.replace(word.slice(st, i), \"\");\n            st = null;\n\n            if (start !== null) {\n              start = 0;\n            }\n          }\n        } else if (word[i] === \"}\") {\n          if (start !== null) {\n            if (this.varsIndividual[word.slice(start + 1, i)][0] !== undefined) {\n              this.wordsForCheck.splice(0, 0, word.slice(start + 1, i));\n            }\n\n            let newWord = word.replace(word.slice(start, i + 1), \"\");\n            this.wordFinder(newWord);\n            return;\n          }\n        }\n      }\n    } else {\n      this.wordsForCheck.forEach(element => {\n        let varInd = this.varsIndividual[element][index];\n\n        if (varInd === undefined) {\n          varInd = this.varsIndividual[element][0];\n        }\n\n        if (varInd === \"\") {\n          this.arr.push(\"{\" + element + \"}\");\n        } else {\n          this.arr.push(varInd);\n        }\n      });\n      this.wordsForCheck = [];\n      this.arr.push(word);\n    }\n  }\n\n  textGenerator(index) {\n    const text = this.state.txt.split(\" \");\n\n    for (let i = 1; i <= text.length; i += 2) {\n      text.splice(i, 0, \" \");\n    }\n\n    text.forEach(word => {\n      this.wordFinder(word, index);\n    });\n    let txt = \"\";\n    this.arr.forEach(v => txt += v);\n    this.arr = [];\n    this.texts[index] = txt;\n    this.setState({\n      text: txt\n    });\n  }\n\n  check(checkbox, variable) {\n    if (checkbox.checked) {\n      const div = document.getElementById(\"d\" + checkbox.id);\n\n      for (let i = 2; i <= this.state.recCount; i++) {\n        if (!document.getElementById(\"v\" + checkbox.id + \"dv\" + i)) {\n          const label = document.createElement(\"label\");\n          const input = document.createElement(\"input\");\n          const newDiv = document.createElement(\"div\");\n          input.id = \"t\" + checkbox.id + \"_\" + i;\n          this.varsIndividual[variable][i - 1] = \"{\" + variable + \"}\";\n\n          input.onchange = e => {\n            this.varsIndividual[variable][i - 1] = e.target.value || \"{\" + variable + \"}\";\n          };\n\n          label.innerHTML = variable;\n          label.htmlFor = \"t\" + checkbox.id + \"_\" + i;\n          newDiv.id = \"v\" + checkbox.id + \"dv\" + i;\n          newDiv.appendChild(label);\n          newDiv.appendChild(input);\n          div.appendChild(newDiv);\n        }\n      }\n\n      const extraDiv = document.getElementById(\"v\" + checkbox.id + \"dv\" + (this.state.recCount + 1));\n\n      if (extraDiv) {\n        extraDiv.parentNode.removeChild(extraDiv);\n      }\n    } else {\n      for (let i = 2; i <= this.state.recCount; i++) {\n        const div = document.getElementById(\"v\" + checkbox.id + \"dv\" + i);\n        if (div) div.parentNode.removeChild(div);\n      }\n\n      this.varsIndividual[variable] = [this.varsIndividual[variable][0]];\n    }\n\n    console.log(this.varsIndividual);\n  }\n\n  async UseTemplateFunc() {\n    const div = document.getElementById(\"forVars\");\n    await this.vars.forEach(v => {\n      const copy = Object.assign(this.varsIndividual, {\n        [v.varName]: [\"{\" + [v.varName] + \"}\"]\n      });\n      this.varsIndividual = copy;\n    });\n    await this.vars.forEach((template, index) => {\n      div.style.borderStyle = \"groove\";\n      div.style.borderColor = \"black\";\n      div.style.paddingTop = \"10px\";\n      div.style.paddingBottom = \"10px\";\n      div.style.paddingLeft = \"10px\";\n      const label = document.createElement(\"label\");\n      const input = document.createElement(\"input\");\n      const newDiv = document.createElement(\"div\");\n      const check = document.createElement(\"input\");\n      newDiv.id = \"d\" + (index + 1);\n      newDiv.className = \"checkDivs\";\n      check.className = \"checkbox\";\n      check.type = \"checkbox\";\n      check.id = index + 1;\n      input.id = \"t\" + (index + 1);\n\n      input.onchange = e => {\n        this.varsIndividual[template.varName][0] = e.target.value || \"{\" + template.varName + \"}\";\n        this.textGenerator(0);\n      };\n\n      label.innerHTML = template.varName || \"{noname}\";\n      label.htmlFor = \"t\" + (index + 1);\n\n      check.onclick = e => {\n        if (e.target.checked) {\n          this.setState({\n            checks: this.state.checks + 1\n          });\n        } else {\n          this.setState({\n            checks: this.state.checks - 1\n          });\n        }\n\n        this.check(e.target, label.innerHTML);\n      };\n\n      newDiv.appendChild(label);\n      newDiv.appendChild(input);\n      newDiv.appendChild(check);\n      div.appendChild(newDiv);\n    });\n    const div2 = document.getElementById(\"addRecBigDiv\");\n    await this.state.recipients.forEach((rec, index) => {\n      if (index !== 0) {\n        const input = document.createElement(\"input\");\n        const button = document.createElement(\"button\");\n        const div = document.createElement(\"div\");\n        input.value = rec;\n        div.className = \"addRecDiv\";\n        div.style.display = \"flex\";\n        this.setState({\n          recCount: this.state.recCount + 1\n        });\n        input.id = \"to\" + this.state.recCount;\n        button.innerHTML = \"X\";\n        input.style.display = \"flex\";\n        input.className = \"formInputRec\";\n        button.className = \"delButRec\";\n        button.type = \"button\";\n\n        button.onclick = () => {\n          input.parentNode.removeChild(input);\n          button.style.display = \"none\";\n        };\n\n        div.appendChild(input);\n        div.appendChild(button);\n        div2.appendChild(div);\n      }\n    });\n  }\n\n  async sendMail() {\n    let text = \"\";\n\n    if (this.state.checks === 0) {\n      text = document.getElementById(\"text\").value;\n    } else {\n      for (let i = 0; i < this.state.recCount; i++) {\n        console.log(this.state.recCount);\n        this.textGenerator(i);\n      }\n\n      text = this.texts;\n    }\n\n    let to = \"\";\n    let a = [];\n\n    for (let i = 1; i <= this.state.recCount; i++) {\n      const rec = document.getElementById(\"to\" + i).value;\n\n      if (this.state.checks === 0) {\n        to += rec;\n\n        if (i !== this.state.recCount) {\n          to += \",\";\n        }\n      } else {\n        a.push(rec);\n        to = a;\n      }\n    }\n\n    await fetch(\"/useTemplate/send\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: \"gorsimonyan200307@gmail.com\",\n        pass: \"gor07072003\",\n        from: document.getElementById(\"from\").value,\n        to: to,\n        subject: document.getElementById(\"title\").value,\n        text: text\n      })\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  async addRecipient() {\n    const input = document.createElement(\"input\");\n    const delButton = document.createElement(\"button\");\n    const div = document.createElement(\"div\");\n    await this.setState({\n      recCount: this.state.recCount + 1\n    });\n\n    for (let i = 1; i <= this.vars.length; i++) {\n      const checkbox = document.getElementById(i);\n      this.check(checkbox, Object.keys(this.varsIndividual)[i - 1]);\n    }\n\n    div.style.display = \"flex\";\n    div.className = \"addRecDiv\";\n    input.id = \"recipients\" + this.state.recCount;\n    input.style.display = \"flex\";\n    input.className = \"formInputRec\";\n    delButton.className = \"delButRec\";\n    delButton.type = \"button\";\n    delButton.id = \"del\" + this.state.recCount;\n    delButton.innerHTML = \"X\";\n\n    delButton.onclick = async () => {\n      input.parentNode.removeChild(input);\n      delButton.style.display = \"none\";\n      await this.setState({\n        recCount: this.state.recCount - 1\n      });\n\n      for (let i = 1; i <= this.vars.length; i++) {\n        const checkbox = document.getElementById(i);\n        this.check(checkbox, Object.keys(this.varsIndividual)[0]);\n      }\n    };\n\n    const bigDiv = document.getElementById(\"addRecBigDiv\");\n    div.appendChild(input);\n    div.appendChild(delButton);\n    bigDiv.appendChild(div);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"width\": \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"back\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sendBox\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"sendForm\",\n          onSubmit: e => {\n            e.preventDefault();\n            window.history.replaceState(null, '', \"/\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"from\",\n              className: \"form\",\n              children: \"from\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"from\",\n              type: \"email\",\n              className: \"form\",\n              value: this.state.template.templateFrom,\n              onChange: e => {\n                this.setState(prevState => ({\n                  template: { ...prevState.template,\n                    templateFrom: e.target.value\n                  }\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"to\",\n              className: \"form\",\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"to1\",\n              type: \"email\",\n              className: \"form\",\n              value: this.state.recipients[0],\n              onChange: e => {\n                this.setState(prevState => ({\n                  recipients: { ...prevState.recipients,\n                    [0]: e.target.value\n                  }\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              id: \"addRec\",\n              onClick: () => this.addRecipient(),\n              children: \"Add Recipient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"addRecBigDiv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"titleLabel\",\n              htmlFor: \"title\",\n              className: \"form\",\n              children: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"title\",\n              className: \"form\",\n              value: this.state.template.templateTitle,\n              onChange: e => {\n                this.setState(prevState => ({\n                  template: { ...prevState.template,\n                    templateTitle: e.target.value\n                  }\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"forVars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"text\",\n              className: \"form\",\n              id: \"textLabel\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"text\",\n              value: this.state.text,\n              className: \"form\",\n              onChange: e => this.setState({\n                text: e.target.value,\n                txt: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"submit\",\n              type: \"submit\",\n              className: \"form\",\n              onClick: this.sendMail,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SendTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/sendTemplate.js"],"names":["React","Component","Link","SendTemplate","constructor","props","state","show","template","txt","templateText","text","recipients","recCount","checks","texts","wordsForCheck","arr","vars","varsIndividual","UseTemplateFunc","bind","sendMail","textGenerator","wordFinder","addRecipient","check","componentDidMount","setState","componentDidUpdate","prevProps","prevState","snapshot","word","index","start","st","includes","i","length","forEach","element","varInd","undefined","push","replace","slice","splice","newWord","split","v","checkbox","variable","checked","div","document","getElementById","id","label","createElement","input","newDiv","onchange","e","target","value","innerHTML","htmlFor","appendChild","extraDiv","parentNode","removeChild","console","log","copy","Object","assign","varName","style","borderStyle","borderColor","paddingTop","paddingBottom","paddingLeft","className","type","onclick","div2","rec","button","display","to","a","fetch","method","headers","body","JSON","stringify","user","pass","from","subject","then","res","apiResponse","delButton","keys","bigDiv","render","preventDefault","window","history","replaceState","templateFrom","templateTitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport {Link} from \"react-router-dom\";\n\nclass SendTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            show: props.show,\n            template: props.template[0],\n            txt : props.template[0].templateText,\n            text: props.template[0].templateText,\n            recipients : props.recipients,\n            recCount: 1,\n            checks: 0\n        }\n        this.texts = []\n        this.wordsForCheck = []\n        this.arr = []\n        this.vars = props.vars\n        this.varsIndividual = {}\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n        this.sendMail = this.sendMail.bind(this)\n        this.textGenerator = this.textGenerator.bind(this)\n        this.wordFinder = this.wordFinder.bind(this)\n        this.addRecipient = this.addRecipient.bind(this)\n        this.check = this.check.bind(this)\n    }\n\n    componentDidMount() {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    wordFinder(word, index){\n        let start = null\n        let st = 0\n        if(word.includes(\"{\") && word.includes(\"}\")) {\n            for (let i = 0; i < word.length; i++) {\n                if (word[0] !== \"{\"){\n                    this.wordsForCheck.forEach(element => {\n                        let varInd = this.varsIndividual[element][index]\n                        if (varInd === undefined){\n                            varInd = this.varsIndividual[element][0]\n                        }\n                        if(varInd === \"\"){\n                            this.arr.push(\"{\" + element + \"}\")\n                        }\n                        else {\n                            this.arr.push(varInd)\n                        }\n                    })\n                    this.wordsForCheck = []\n                }\n                if (word[i] === \"{\") {\n                    start = i\n                    if (st !== null){\n                        this.arr.push(word.replace(word.slice(i, word.length), \"\"))\n                        word = word.replace(word.slice(st, i), \"\")\n                        st = null\n                        if (start !== null){\n                            start = 0\n                        }\n                    }\n                }\n                else if (word[i] === \"}\") {\n                    if (start !== null) {\n                        if (this.varsIndividual[word.slice(start + 1, i)][0] !== undefined ) {\n                            this.wordsForCheck.splice(0, 0, word.slice(start + 1, i))\n                        }\n                            let newWord = word.replace(word.slice(start, i + 1), \"\")\n                            this.wordFinder(newWord)\n                            return\n\n                    }\n                }\n            }\n        }\n        else {\n            this.wordsForCheck.forEach(element => {\n                let varInd = this.varsIndividual[element][index]\n                if (varInd === undefined){\n                    varInd = this.varsIndividual[element][0]\n                }\n                if(varInd === \"\"){\n                    this.arr.push(\"{\" + element + \"}\")\n                }\n                else {\n                    this.arr.push(varInd)\n                }\n            })\n            this.wordsForCheck = []\n            this.arr.push(word)\n        }\n    }\n\n    textGenerator(index){\n        const text = this.state.txt.split(\" \")\n        for(let i = 1; i <= text.length; i+=2){\n            text.splice(i, 0, \" \")\n        }\n        text.forEach(word => {\n            this.wordFinder(word, index)\n        })\n        let txt = \"\"\n        this.arr.forEach(v => txt += v)\n        this.arr = []\n        this.texts[index] = txt\n        this.setState({text: txt})\n    }\n\n    check(checkbox, variable){\n        if (checkbox.checked){\n            const div = document.getElementById(\"d\" + checkbox.id)\n            for (let i = 2; i <= this.state.recCount; i++) {\n                if (!document.getElementById(\"v\" + checkbox.id + \"dv\" + i)) {\n                    const label = document.createElement(\"label\")\n                    const input = document.createElement(\"input\")\n                    const newDiv = document.createElement(\"div\")\n                    input.id = \"t\" + checkbox.id + \"_\" + i\n                    this.varsIndividual[variable][i-1] = \"{\" + variable + \"}\"\n                    input.onchange = (e) => {\n                        this.varsIndividual[variable][i-1] = e.target.value || \"{\" + variable + \"}\"\n                    }\n                    label.innerHTML = variable\n                    label.htmlFor = \"t\" + checkbox.id + \"_\" + i\n                    newDiv.id = \"v\" + checkbox.id + \"dv\" + i\n                    newDiv.appendChild(label)\n                    newDiv.appendChild(input)\n                    div.appendChild(newDiv)\n                }\n            }\n            const extraDiv = document.getElementById(\"v\" + checkbox.id + \"dv\" + (this.state.recCount + 1))\n            if (extraDiv) {\n                extraDiv.parentNode.removeChild(extraDiv)\n            }\n        }\n        else {\n            for (let i = 2; i <= this.state.recCount; i++){\n                const div = document.getElementById(\"v\" + checkbox.id + \"dv\" + i)\n                if(div) div.parentNode.removeChild(div)\n            }\n            this.varsIndividual[variable] = [this.varsIndividual[variable][0]]\n        }\n        console.log(this.varsIndividual)\n    }\n\n    async UseTemplateFunc(){\n        const div = document.getElementById(\"forVars\")\n        await this.vars.forEach(v => {\n            const copy = Object.assign(this.varsIndividual, {[v.varName]: [\"{\" + [v.varName] + \"}\"]})\n            this.varsIndividual = copy\n        })\n        await this.vars.forEach((template, index) => {\n            div.style.borderStyle = \"groove\"\n            div.style.borderColor = \"black\"\n            div.style.paddingTop = \"10px\"\n            div.style.paddingBottom = \"10px\"\n            div.style.paddingLeft = \"10px\"\n            const label = document.createElement(\"label\")\n            const input = document.createElement(\"input\")\n            const newDiv = document.createElement(\"div\")\n            const check = document.createElement(\"input\")\n            newDiv.id = \"d\" + (index + 1)\n            newDiv.className = \"checkDivs\"\n            check.className = \"checkbox\"\n            check.type = \"checkbox\"\n            check.id = index + 1\n            input.id = \"t\" + (index + 1)\n            input.onchange = (e) => {\n                this.varsIndividual[template.varName][0] = e.target.value || \"{\" + template.varName + \"}\"\n                this.textGenerator(0)\n            }\n            label.innerHTML = template.varName || \"{noname}\"\n            label.htmlFor = \"t\" + (index + 1)\n            check.onclick = (e) => {\n                if (e.target.checked){\n                    this.setState({checks: this.state.checks + 1})\n                }\n                else {\n                    this.setState({checks: this.state.checks - 1})\n                }\n                this.check(e.target, label.innerHTML)\n            }\n            newDiv.appendChild(label)\n            newDiv.appendChild(input)\n            newDiv.appendChild(check)\n            div.appendChild(newDiv)\n        })\n        const div2= document.getElementById(\"addRecBigDiv\")\n        await this.state.recipients.forEach((rec, index) => {\n            if (index !== 0){\n                const input = document.createElement(\"input\")\n                const button = document.createElement(\"button\")\n                const div = document.createElement(\"div\")\n                input.value = rec\n                div.className = \"addRecDiv\"\n                div.style.display = \"flex\"\n                this.setState({recCount: this.state.recCount + 1})\n                input.id = \"to\" + this.state.recCount\n                button.innerHTML = \"X\"\n                input.style.display = \"flex\"\n                input.className = \"formInputRec\"\n                button.className = \"delButRec\"\n                button.type = \"button\"\n                button.onclick = () => {\n                    input.parentNode.removeChild(input)\n                    button.style.display = \"none\"\n                }\n                div.appendChild(input)\n                div.appendChild(button)\n                div2.appendChild(div)\n            }\n        })\n    }\n\n    async sendMail(){\n        let text = \"\"\n        if (this.state.checks === 0){\n            text = document.getElementById(\"text\").value\n        }\n        else {\n            for (let i = 0; i < this.state.recCount; i++){\n                console.log(this.state.recCount)\n                this.textGenerator(i)\n            }\n            text = this.texts\n        }\n        let to = \"\"\n        let a = []\n        for (let i = 1; i <= this.state.recCount; i++){\n            const rec = document.getElementById(\"to\" + i).value\n            if (this.state.checks === 0){\n                to += rec\n                if (i !== this.state.recCount){\n                    to += \",\"\n                }\n            }\n            else {\n                a.push(rec)\n                to = a\n            }\n        }\n        await fetch(\"/useTemplate/send\", {\n            method:'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                user: \"gorsimonyan200307@gmail.com\",\n                pass: \"gor07072003\",\n                from: document.getElementById(\"from\").value,\n                to: to,\n                subject: document.getElementById(\"title\").value,\n                text: text\n            })\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n    }\n\n    async addRecipient(){\n        const input = document.createElement(\"input\")\n        const delButton = document.createElement(\"button\")\n        const div = document.createElement(\"div\")\n        await this.setState({recCount : this.state.recCount + 1})\n        for (let i = 1; i <= this.vars.length; i++){\n            const checkbox = document.getElementById(i)\n            this.check(checkbox, Object.keys(this.varsIndividual)[i-1])\n        }\n        div.style.display =\"flex\"\n        div.className = \"addRecDiv\"\n        input.id = \"recipients\" + this.state.recCount\n        input.style.display = \"flex\"\n        input.className = \"formInputRec\"\n        delButton.className = \"delButRec\"\n        delButton.type = \"button\"\n        delButton.id = \"del\" + this.state.recCount\n        delButton.innerHTML = \"X\"\n        delButton.onclick = async () => {\n            input.parentNode.removeChild(input)\n            delButton.style.display = \"none\"\n            await this.setState({recCount : this.state.recCount - 1})\n            for (let i = 1; i <= this.vars.length; i++){\n                const checkbox = document.getElementById(i)\n                this.check(checkbox, Object.keys(this.varsIndividual)[0])\n            }\n        }\n        const bigDiv = document.getElementById(\"addRecBigDiv\")\n        div.appendChild(input)\n        div.appendChild(delButton)\n        bigDiv.appendChild(div)\n    }\n\n    render() {\n        return (\n            <div style={{\"width\" : \"100%\"}}>\n                <Link to=\"/\">\n                    <button id={\"back\"}>Back</button>\n                </Link>\n                <div  id={\"sendBox\"}>\n                    <form id={\"sendForm\"} onSubmit={e => {\n                        e.preventDefault()\n                        window.history.replaceState(null, '', \"/\")\n                    }}>\n                        <div>\n                            <label htmlFor=\"from\" className=\"form\">from</label>\n                            <input id={\"from\"} type=\"email\" className=\"form\" value={this.state.template.templateFrom} onChange={(e) => {this.setState(prevState => ({\n                                template : {\n                                    ...prevState.template,\n                                    templateFrom : e.target.value\n                                }\n                            }))}}/>\n                        </div>\n                        <div>\n                            <label htmlFor={\"to\"} className=\"form\">To</label>\n                            <input id={\"to1\"} type=\"email\" className=\"form\" value={this.state.recipients[0]} onChange={(e) => {this.setState(prevState => ({\n                                recipients: {\n                                    ...prevState.recipients,\n                                    [0]: e.target.value\n                                }\n                            }))}}/>\n                            <button type={\"button\"} id={\"addRec\"} onClick={() => this.addRecipient()}>Add Recipient</button>\n                        </div>\n                        <div id={\"addRecBigDiv\"}>\n\n                        </div>\n                        <div>\n                            <label id={\"titleLabel\"} htmlFor={\"title\"} className=\"form\">title</label>\n                            <input id={\"title\"} className=\"form\" value={this.state.template.templateTitle} onChange={(e) => {this.setState(prevState => ({\n                                template : {\n                                    ...prevState.template,\n                                    templateTitle : e.target.value\n                                }\n                            }))}}/>\n                        </div>\n                        <div id={\"forVars\"}>\n\n                        </div>\n                        <div>\n                            <label htmlFor={\"text\"} className={\"form\"} id={\"textLabel\"}>Text</label>\n                            <textarea id={\"text\"} value={this.state.text} className={\"form\"} onChange={(e) => this.setState({text: e.target.value, txt: e.target.value})}/>\n                        </div>\n                        <Link to={\"/\"}>\n                            <button id={\"submit\"} type={\"submit\"} className={\"form\"} onClick={this.sendMail}>Send</button>\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SendTemplate"]},"metadata":{},"sourceType":"module"}