{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js\";\nimport React, { Component } from \"react\";\nimport SendTemplate from \"./sendTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UseTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      apiResponseTo: \"\",\n      apiResponseVars: \"\",\n      myTempIsClick: false,\n      tempClicked: false,\n      templateId: null,\n      send: false,\n      template: {},\n      recipientsForSend: [],\n      varsForSend: [],\n      show: false\n    };\n    this.wordsForCheck = [];\n    this.arr = [];\n    this.words = [];\n    this.recipients = [];\n    this.vars = [];\n    this.myTemplates = this.myTemplates.bind(this);\n    this.showMyTemps = this.showMyTemps.bind(this);\n    this.templateOnClick = this.templateOnClick.bind(this);\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n  }\n\n  templateOnClick(id) {\n    const p = document.getElementById(\"example\");\n    this.state.apiResponse.filter(template => {\n      if (template.id == id) {\n        p.innerHTML = template.templateText;\n        this.setState({\n          tempClicked: true\n        });\n        this.setState({\n          templateId: id\n        });\n      }\n    });\n  }\n\n  async myTemplates() {\n    const div = document.getElementById(\"useTemplatesMenu\");\n    const myTemps = document.getElementById(\"myTemps\");\n    await fetch(\"/useTemplate/templates\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: JSON.parse(res)\n    }));\n    await fetch(\"/useTemplate/recipients\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponseTo: JSON.parse(res)\n    }));\n    await fetch(\"/useTemplate/vars\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponseVars: JSON.parse(res)\n    }));\n    this.state.apiResponse.forEach((template, index) => {\n      const ep = document.getElementById(index + 1);\n\n      if (ep === null) {\n        const p = document.createElement(\"p\");\n        p.id = index + 1;\n        p.innerHTML = template.templateName;\n\n        p.onclick = () => this.templateOnClick(p.id);\n\n        div.appendChild(p);\n        div.insertBefore(p, myTemps);\n      }\n    });\n  }\n\n  showMyTemps() {\n    this.myTemplates();\n\n    for (let i = 1; i <= this.state.apiResponse.length; i++) {\n      const p = document.getElementById(i);\n\n      if (this.state.myTempIsClick) {\n        p.style.display = \"none\";\n        const g = document.getElementById(\"example\");\n        g.innerHTML = \"\";\n      } else {\n        p.style.display = \"block\";\n      }\n    }\n\n    this.setState({\n      myTempIsClick: !this.state.myTempIsClick,\n      tempClicked: false,\n      templateId: null\n    });\n  }\n\n  async UseTemplateFunc() {\n    await this.setState({\n      template: this.state.apiResponse.filter(temp => temp.id == this.state.templateId)[0],\n      send: true,\n      recipientsForSend: this.state.apiResponseTo.filter(temp => temp.tableId == this.state.templateId)[0],\n      varsForSend: this.state.apiResponseVars.filter(temp => temp.tableId == this.state.templateId),\n      show: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!this.state.send && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"useTempsGeneral\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"useTemplatesMenu\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"defTemps\",\n            children: \"Default Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"myTemps\",\n            onClick: this.showMyTemps,\n            children: \"My Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), this.state.tempClicked && /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"useTemplateButton\",\n            onClick: this.UseTemplateFunc,\n            children: \"Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 38\n      }, this), this.state.send && /*#__PURE__*/_jsxDEV(SendTemplate, {\n        show: this.state.show,\n        template: this.state.template,\n        recipients: this.state.recipientsForSend,\n        vars: this.state.varsForSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UseTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js"],"names":["React","Component","SendTemplate","UseTemplate","constructor","props","state","apiResponse","apiResponseTo","apiResponseVars","myTempIsClick","tempClicked","templateId","send","template","recipientsForSend","varsForSend","show","wordsForCheck","arr","words","recipients","vars","myTemplates","bind","showMyTemps","templateOnClick","UseTemplateFunc","id","p","document","getElementById","filter","innerHTML","templateText","setState","div","myTemps","fetch","method","headers","then","res","text","JSON","parse","forEach","index","ep","createElement","templateName","onclick","appendChild","insertBefore","i","length","style","display","g","temp","tableId","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport SendTemplate from \"./sendTemplate\";\n\nclass UseTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            apiResponse:\"\",\n            apiResponseTo:\"\",\n            apiResponseVars:\"\",\n            myTempIsClick: false,\n            tempClicked: false,\n            templateId: null,\n            send: false,\n            template: {},\n            recipientsForSend: [],\n            varsForSend: [],\n            show: false\n        }\n        this.wordsForCheck = []\n        this.arr = []\n        this.words = []\n        this.recipients = []\n        this.vars = []\n        this.myTemplates = this.myTemplates.bind(this)\n        this.showMyTemps = this.showMyTemps.bind(this)\n        this.templateOnClick = this.templateOnClick.bind(this)\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n    }\n\n    templateOnClick(id){\n        const p = document.getElementById(\"example\")\n        this.state.apiResponse.filter(template => {\n            if(template.id == id){\n                p.innerHTML = template.templateText\n                this.setState({tempClicked: true})\n                this.setState({templateId: id})\n            }\n        })\n    }\n\n    async myTemplates(){\n        const div = document.getElementById(\"useTemplatesMenu\")\n        const myTemps = document.getElementById(\"myTemps\")\n        await fetch(\"/useTemplate/templates\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: JSON.parse(res)}))\n        await fetch(\"/useTemplate/recipients\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponseTo: JSON.parse(res)}))\n        await fetch(\"/useTemplate/vars\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponseVars: JSON.parse(res)}))\n        this.state.apiResponse.forEach((template, index) => {\n            const ep = document.getElementById(index+1)\n            if(ep === null) {\n                const p = document.createElement(\"p\")\n                p.id = index + 1\n                p.innerHTML = template.templateName\n                p.onclick = () => this.templateOnClick(p.id)\n                div.appendChild(p)\n                div.insertBefore(p, myTemps)\n            }\n        })\n    }\n\n    showMyTemps(){\n        this.myTemplates()\n        for(let i = 1; i <= this.state.apiResponse.length; i++){\n            const p = document.getElementById(i)\n            if(this.state.myTempIsClick){\n                p.style.display = \"none\"\n                const g = document.getElementById(\"example\")\n                g.innerHTML = \"\"\n            }\n            else {\n                p.style.display = \"block\"\n            }\n        }\n        this.setState({myTempIsClick: !this.state.myTempIsClick,\n                            tempClicked: false,\n                            templateId: null})\n    }\n\n    async UseTemplateFunc(){\n        await this.setState({template: this.state.apiResponse.filter(temp => temp.id == this.state.templateId)[0],\n                            send: true,\n                            recipientsForSend: this.state.apiResponseTo.filter(temp => temp.tableId == this.state.templateId)[0],\n                            varsForSend: this.state.apiResponseVars.filter(temp => temp.tableId == this.state.templateId),\n                            show: true})\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.send && <div id={\"useTempsGeneral\"}>\n                    <span id={\"useTemplatesMenu\"}>\n                        <p id={\"defTemps\"}>Default Templates</p>\n                        <p id={\"myTemps\"} onClick={this.showMyTemps}>My Templates</p>\n                    </span>\n                    <span>\n                        <p id={\"example\"}></p>\n                        {this.state.tempClicked && <button id={\"useTemplateButton\"} onClick={this.UseTemplateFunc}>Use</button>}\n                    </span>\n                </div>}\n                {this.state.send && <SendTemplate show={this.state.show} template={this.state.template} recipients={this.state.recipientsForSend} vars={this.state.varsForSend}/>}\n            </div>\n        )\n    }\n}\n\nexport default UseTemplate"]},"metadata":{},"sourceType":"module"}