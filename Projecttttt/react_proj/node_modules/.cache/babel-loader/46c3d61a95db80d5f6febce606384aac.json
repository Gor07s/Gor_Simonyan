{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/modTemplate.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: props.show,\n      template: props.template,\n      recipients: props.recipients,\n      recCount: 1\n    };\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n    this.modTemp = this.modTemp.bind(this);\n    this.addRecipient = this.addRecipient.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  async UseTemplateFunc() {\n    const div2 = document.getElementById(\"addRecBigDiv\");\n    await this.state.recipients.forEach((rec, index) => {\n      if (index !== 0) {\n        const input = document.createElement(\"input\");\n        const button = document.createElement(\"button\");\n        const div = document.createElement(\"div\");\n        input.value = rec;\n        div.className = \"addRecDiv\";\n        div.style.display = \"flex\";\n        this.setState({\n          recCount: this.state.recCount + 1\n        });\n        console.log(\"to\" + this.state.recCount);\n        input.id = \"to\" + this.state.recCount;\n        button.innerHTML = \"X\";\n        input.style.display = \"flex\";\n        input.className = \"formInputRec\";\n        button.className = \"delButRec\";\n        button.type = \"button\";\n\n        button.onclick = () => {\n          input.parentNode.removeChild(input);\n          button.style.display = \"none\";\n        };\n\n        div.appendChild(input);\n        div.appendChild(button);\n        div2.appendChild(div);\n      }\n    });\n  }\n\n  async modTemp() {\n    let to = \"\";\n\n    for (let i = 1; i <= this.state.recCount; i++) {\n      const rec = document.getElementById(\"to\" + i).value;\n      to += rec;\n\n      if (i !== this.state.recCount) {\n        to += \",\";\n      }\n    }\n\n    await fetch(\"/useTemplate/modify\", {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: this.state.template.templateId,\n        name: document.getElementById(\"templateName\").value,\n        from: document.getElementById(\"from\").value,\n        to: to,\n        subject: document.getElementById(\"title\").value,\n        text: document.getElementById(\"text\").value\n      })\n    });\n  }\n\n  async addRecipient() {\n    const input = document.createElement(\"input\");\n    const delButton = document.createElement(\"button\");\n    const div = document.createElement(\"div\");\n    await this.setState({\n      rId: this.state.rId + 1\n    });\n    div.style.display = \"flex\";\n    div.className = \"addRecDiv\";\n    input.id = \"recipients\" + this.state.recCount;\n    input.style.display = \"flex\";\n    input.className = \"formInputRec\";\n    delButton.className = \"delButRec\";\n    delButton.type = \"button\";\n    delButton.id = \"del\" + this.state.recCount;\n    delButton.innerHTML = \"X\";\n\n    delButton.onclick = () => {\n      input.parentNode.removeChild(input);\n      delButton.style.display = \"none\";\n    };\n\n    const bigDiv = document.getElementById(\"addRecBigDiv\");\n    div.appendChild(input);\n    div.appendChild(delButton);\n    bigDiv.appendChild(div);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sendBox\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"sendForm\",\n        onSubmit: e => {\n          e.preventDefault();\n          window.history.replaceState(null, '', \"/\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"templateName\",\n            className: \"form\",\n            children: \"Template*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"templateName\",\n            className: \"form\",\n            value: this.state.template.templateName,\n            onChange: e => {\n              this.setState(prevState => ({\n                template: { ...prevState.template,\n                  templateName: e.target.value\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"from\",\n            className: \"form\",\n            children: \"from\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"from\",\n            type: \"email\",\n            className: \"form\",\n            value: this.state.template.templateFrom,\n            onChange: e => {\n              this.setState(prevState => ({\n                template: { ...prevState.template,\n                  templateFrom: e.target.value\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"to1\",\n            className: \"form\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"to1\",\n            type: \"email\",\n            className: \"form\",\n            value: this.state.recipients[0],\n            onChange: e => {\n              this.setState(prevState => ({\n                recipients: { ...prevState.recipients,\n                  [0]: e.target.value\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"addRec\",\n            onClick: () => this.addRecipient(),\n            children: \"Add Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"addRecBigDiv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"titleLabel\",\n            htmlFor: \"title\",\n            className: \"form\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            className: \"form\",\n            value: this.state.template.templateTitle,\n            onChange: e => {\n              this.setState(prevState => ({\n                template: { ...prevState.template,\n                  templateTitle: e.target.value\n                }\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"forVars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            className: \"form\",\n            id: \"textLabel\",\n            children: \"Text*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            value: this.state.template.templateText,\n            className: \"form\",\n            onChange: e => this.setState({\n              text: e.target.value,\n              txt: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"form\",\n          onClick: this.modTemp,\n          children: \"Modify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/modTemplate.js"],"names":["React","Component","ModTemplate","constructor","props","state","show","template","recipients","recCount","UseTemplateFunc","bind","modTemp","addRecipient","componentDidMount","setState","componentDidUpdate","prevProps","prevState","snapshot","div2","document","getElementById","forEach","rec","index","input","createElement","button","div","value","className","style","display","console","log","id","innerHTML","type","onclick","parentNode","removeChild","appendChild","to","i","fetch","method","headers","body","JSON","stringify","templateId","name","from","subject","text","delButton","rId","bigDiv","render","e","preventDefault","window","history","replaceState","templateName","target","templateFrom","templateTitle","templateText","txt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nclass ModTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            show: props.show,\n            template: props.template,\n            recipients : props.recipients,\n            recCount: 1,\n        }\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n        this.modTemp = this.modTemp.bind(this)\n        this.addRecipient = this.addRecipient.bind(this)\n    }\n\n    componentDidMount() {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    async UseTemplateFunc(){\n        const div2= document.getElementById(\"addRecBigDiv\")\n        await this.state.recipients.forEach((rec, index) => {\n            if (index !== 0){\n                const input = document.createElement(\"input\")\n                const button = document.createElement(\"button\")\n                const div = document.createElement(\"div\")\n                input.value = rec\n                div.className = \"addRecDiv\"\n                div.style.display = \"flex\"\n                this.setState({recCount: this.state.recCount + 1})\n                console.log(\"to\" + this.state.recCount)\n                input.id = \"to\" + this.state.recCount\n                button.innerHTML = \"X\"\n                input.style.display = \"flex\"\n                input.className = \"formInputRec\"\n                button.className = \"delButRec\"\n                button.type = \"button\"\n                button.onclick = () => {\n                    input.parentNode.removeChild(input)\n                    button.style.display = \"none\"\n                }\n                div.appendChild(input)\n                div.appendChild(button)\n                div2.appendChild(div)\n            }\n        })\n    }\n\n    async modTemp(){\n        let to = \"\"\n        for (let i = 1; i <= this.state.recCount; i++){\n            const rec = document.getElementById(\"to\" + i).value\n            to += rec\n            if (i !== this.state.recCount){\n                to += \",\"\n            }\n        }\n        await fetch(\"/useTemplate/modify\", {\n            method:'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: this.state.template.templateId,\n                name: document.getElementById(\"templateName\").value,\n                from: document.getElementById(\"from\").value,\n                to: to,\n                subject: document.getElementById(\"title\").value,\n                text: document.getElementById(\"text\").value\n            })\n        })\n    }\n\n    async addRecipient(){\n        const input = document.createElement(\"input\")\n        const delButton = document.createElement(\"button\")\n        const div = document.createElement(\"div\")\n        await this.setState({rId : this.state.rId + 1})\n        div.style.display =\"flex\"\n        div.className = \"addRecDiv\"\n        input.id = \"recipients\" + this.state.recCount\n        input.style.display = \"flex\"\n        input.className = \"formInputRec\"\n        delButton.className = \"delButRec\"\n        delButton.type = \"button\"\n        delButton.id = \"del\" + this.state.recCount\n        delButton.innerHTML = \"X\"\n        delButton.onclick = () => {\n            input.parentNode.removeChild(input)\n            delButton.style.display = \"none\"\n        }\n        const bigDiv = document.getElementById(\"addRecBigDiv\")\n        div.appendChild(input)\n        div.appendChild(delButton)\n        bigDiv.appendChild(div)\n    }\n\n    render() {\n        return (\n            <div  id={\"sendBox\"}>\n                <form id={\"sendForm\"} onSubmit={e => {\n                    e.preventDefault()\n                    window.history.replaceState(null, '', \"/\")\n                }}>\n                    <div>\n                        <label htmlFor=\"templateName\" className={\"form\"}>Template*</label>\n                        <input id=\"templateName\" className={\"form\"} value={this.state.template.templateName} onChange={(e) => {this.setState(prevState => ({\n                            template : {\n                                ...prevState.template,\n                                templateName : e.target.value\n                            }\n                        }))}}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"from\" className=\"form\">from</label>\n                        <input id={\"from\"} type=\"email\" className=\"form\" value={this.state.template.templateFrom} onChange={(e) => {this.setState(prevState => ({\n                            template : {\n                                ...prevState.template,\n                                templateFrom : e.target.value\n                            }\n                        }))}}/>\n                    </div>\n                    <div>\n                        <label htmlFor={\"to1\"} className=\"form\">To</label>\n                        <input id={\"to1\"} type=\"email\" className=\"form\" value={this.state.recipients[0]} onChange={(e) => {this.setState(prevState => ({\n                            recipients: {\n                                ...prevState.recipients,\n                                [0]: e.target.value\n                            }\n                        }))}}/>\n                        <button type={\"button\"} id={\"addRec\"} onClick={() => this.addRecipient()}>Add Recipient</button>\n                    </div>\n                    <div id={\"addRecBigDiv\"}>\n\n                    </div>\n                    <div>\n                        <label id={\"titleLabel\"} htmlFor={\"title\"} className=\"form\">title</label>\n                        <input id={\"title\"} className=\"form\" value={this.state.template.templateTitle} onChange={(e) => {this.setState(prevState => ({\n                            template : {\n                                ...prevState.template,\n                                templateTitle : e.target.value\n                            }\n                        }))}}/>\n                    </div>\n                    <div id={\"forVars\"}>\n\n                    </div>\n                    <div>\n                        <label htmlFor={\"text\"} className={\"form\"} id={\"textLabel\"}>Text*</label>\n                        <textarea id={\"text\"} value={this.state.template.templateText} className={\"form\"} onChange={(e) => this.setState({text: e.target.value, txt: e.target.value})}/>\n                    </div>\n                    <button id={\"submit\"} type={\"submit\"} className={\"form\"} onClick={this.modTemp}>Modify</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ModTemplate"]},"metadata":{},"sourceType":"module"}