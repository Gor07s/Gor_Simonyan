{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js\";\nimport React, { Component } from \"react\";\nimport { slide as Menu } from 'react-burger-menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UseTemplate extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiResponse: \"\",\n      myTempIsClick: false,\n      clicked: 0\n    };\n    this.words = [];\n    this.myTemplates = this.myTemplates.bind(this);\n    this.showMyTemps = this.showMyTemps.bind(this);\n    this.templateOnClick = this.templateOnClick.bind(this);\n  }\n\n  templateOnClick(id) {\n    const example = document.getElementById(\"example\");\n    let text = \"\";\n    this.words.filter(template => {\n      if (template.id == id) {\n        text = template.text;\n      }\n    });\n    example.innerHTML = text;\n  }\n\n  async myTemplates() {\n    const div = document.getElementById(\"useTemplatesMenu\");\n    const myTemps = document.getElementById(\"myTemps\");\n    await fetch(\"/useTemplate\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n    let templates = this.state.apiResponse.substring(1, this.state.apiResponse.length - 1).split('},');\n    templates[0] += \"}\";\n\n    for (let i = 0; i < templates.length; i++) {\n      let a = JSON.parse(templates[i]);\n      this.words.push(a);\n    }\n\n    this.words.forEach((template, index) => {\n      const p = document.createElement(\"p\");\n      p.id = index + 1;\n      p.innerHTML = template.templateName;\n      p.onclick = this.templateOnClick(p.id);\n      div.appendChild(p);\n      div.insertBefore(p, myTemps);\n    });\n  }\n\n  showMyTemps() {\n    if (this.state.clicked === 0) {\n      this.state.clicked++;\n      this.myTemplates();\n    }\n\n    for (let i = 1; i <= this.words.length; i++) {\n      const p = document.getElementById(i);\n\n      if (this.state.myTempIsClick) {\n        p.style.display = \"none\";\n      } else {\n        p.style.display = \"block\";\n      }\n    }\n\n    this.state.myTempIsClick = !this.state.myTempIsClick;\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <Menu width={'150px'} >\n      //     <p id={\"defaultTemplates\"} className={\"templateMenu\"}>Default Templates</p>\n      //     <p id={\"myTemplates\"} className={\"templateMenu\"}>My Templates</p>\n      // </Menu>\n      _jsxDEV(\"div\", {\n        id: \"useTempsGeneral\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"useTemplatesMenu\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"defTemps\",\n            children: \"Default Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"myTemps\",\n            onClick: this.showMyTemps,\n            children: \"My Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default UseTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js"],"names":["React","Component","slide","Menu","UseTemplate","constructor","state","apiResponse","myTempIsClick","clicked","words","myTemplates","bind","showMyTemps","templateOnClick","id","example","document","getElementById","text","filter","template","innerHTML","div","myTemps","fetch","method","headers","then","res","setState","templates","substring","length","split","i","a","JSON","parse","push","forEach","index","p","createElement","templateName","onclick","appendChild","insertBefore","style","display","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { slide as Menu } from 'react-burger-menu'\n\nclass UseTemplate extends Component{\n    constructor() {\n        super();\n        this.state={\n            apiResponse:\"\",\n            myTempIsClick: false,\n            clicked: 0\n        }\n        this.words = []\n        this.myTemplates = this.myTemplates.bind(this)\n        this.showMyTemps = this.showMyTemps.bind(this)\n        this.templateOnClick = this.templateOnClick.bind(this)\n\n        }\n\n    templateOnClick(id){\n        const example = document.getElementById(\"example\")\n        let text = \"\"\n        this.words.filter(template => {\n            if(template.id == id){\n                text = template.text\n            }\n        })\n        example.innerHTML = text\n    }\n\n    async myTemplates(){\n        const div = document.getElementById(\"useTemplatesMenu\")\n        const myTemps = document.getElementById(\"myTemps\")\n        await fetch(\"/useTemplate\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n        let templates = (this.state.apiResponse).substring(1,this.state.apiResponse.length-1).split('},')\n        templates[0] += \"}\"\n        for(let i = 0; i < templates.length; i++) {\n            let a = JSON.parse(templates[i])\n            this.words.push(a)\n        }\n        this.words.forEach((template, index) => {\n            const p = document.createElement(\"p\")\n            p.id = index + 1\n            p.innerHTML = template.templateName\n            p.onclick = this.templateOnClick(p.id)\n            div.appendChild(p)\n            div.insertBefore(p, myTemps)\n        })\n    }\n\n    showMyTemps(){\n        if(this.state.clicked === 0){\n            this.state.clicked++\n            this.myTemplates()\n        }\n        for(let i = 1; i <= this.words.length; i++){\n            const p = document.getElementById(i)\n            if(this.state.myTempIsClick){\n                p.style.display = \"none\"\n            }\n            else {\n                p.style.display = \"block\"\n            }\n        }\n        this.state.myTempIsClick = !this.state.myTempIsClick\n    }\n\n    render() {\n        return (\n            // <Menu width={'150px'} >\n            //     <p id={\"defaultTemplates\"} className={\"templateMenu\"}>Default Templates</p>\n            //     <p id={\"myTemplates\"} className={\"templateMenu\"}>My Templates</p>\n            // </Menu>\n            <div id={\"useTempsGeneral\"}>\n                <span id={\"useTemplatesMenu\"}>\n                    <p id={\"defTemps\"}>Default Templates</p>\n                    <p id={\"myTemps\"} onClick={this.showMyTemps}>My Templates</p>\n                </span>\n                <span id={\"example\"}></span>\n            </div>\n        )\n    }\n}\n\nexport default UseTemplate"]},"metadata":{},"sourceType":"module"}