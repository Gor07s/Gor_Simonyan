{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/sendTemplate.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SendTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: props.show,\n      variables: {},\n      template: props.template[0],\n      txt: props.template[0].templateText,\n      text: props.template[0].templateText,\n      recipients: props.recipients,\n      recCount: 1\n    };\n    this.wordsForCheck = [];\n    this.arr = [];\n    this.vars = props.vars;\n    this.varsIndividual = {};\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n    this.sendMail = this.sendMail.bind(this);\n    this.textGenerator = this.textGenerator.bind(this);\n    this.wordFinder = this.wordFinder.bind(this);\n    this.addRecipient = this.addRecipient.bind(this);\n    this.check = this.check.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  wordFinder(word) {\n    let start = null;\n    let st = 0;\n\n    if (word.includes(\"{\") && word.includes(\"}\")) {\n      for (let i = 0; i < word.length; i++) {\n        if (word[0] !== \"{\") {\n          this.wordsForCheck.forEach(element => {\n            if (this.state.variables[element] === \"\") {\n              this.arr.push(\"{\" + element + \"}\");\n            } else {\n              this.arr.push(this.state.variables[element]);\n            }\n          });\n          this.wordsForCheck = [];\n        }\n\n        if (word[i] === \"{\") {\n          start = i;\n\n          if (st !== null) {\n            this.arr.push(word.replace(word.slice(i, word.length), \"\"));\n            word = word.replace(word.slice(st, i), \"\");\n            st = null;\n\n            if (start !== null) {\n              start = 0;\n            }\n          }\n        } else if (word[i] === \"}\") {\n          if (start !== null) {\n            if (this.state.variables[word.slice(start + 1, i)] !== undefined) {\n              this.wordsForCheck.splice(0, 0, word.slice(start + 1, i));\n            }\n\n            let newWord = word.replace(word.slice(start, i + 1), \"\");\n            this.wordFinder(newWord);\n            return;\n          }\n        }\n      }\n    } else {\n      this.wordsForCheck.forEach(element => {\n        if (this.state.variables[element] === \"\") {\n          this.arr.push(\"{\" + element + \"}\");\n        } else {\n          this.arr.push(this.state.variables[element]);\n        }\n      });\n      this.wordsForCheck = [];\n      this.arr.push(word);\n    }\n  }\n\n  textGenerator() {\n    const text = this.state.txt.split(\" \");\n\n    for (let i = 1; i <= text.length; i += 2) {\n      text.splice(i, 0, \" \");\n    }\n\n    text.forEach(word => {\n      this.wordFinder(word, []);\n    });\n  }\n\n  check(checkbox) {}\n\n  async UseTemplateFunc() {\n    const div = document.getElementById(\"forVars\");\n    await this.vars.forEach(v => {\n      const copy = Object.assign(this.state.variables, {\n        [v.varName]: \"{\" + [v.varName] + \"}\"\n      });\n      const copy2 = Object.assign(this.varsIndividual, {\n        [v.varName]: [\"{\" + [v.varName] + \"}\"]\n      });\n      this.varsIndividual = copy2;\n      console.log(this.varsIndividual.name);\n      this.setState({\n        variables: copy\n      });\n    });\n    await this.vars.forEach((template, index) => {\n      div.style.borderStyle = \"groove\";\n      div.style.borderColor = \"black\";\n      div.style.paddingTop = \"10px\";\n      div.style.paddingBottom = \"10px\";\n      div.style.paddingLeft = \"10px\";\n      const label = document.createElement(\"label\");\n      const input = document.createElement(\"input\");\n      const newDiv = document.createElement(\"div\");\n      const check = document.createElement(\"input\");\n      check.className = \"checkbox\";\n      check.type = \"checkbox\";\n      check.id = index + 1;\n\n      check.onclick = e => this.check(e.target);\n\n      input.id = \"t\" + (index + 1);\n\n      input.onchange = e => {\n        this.setState(prevState => ({\n          variables: { ...prevState.variables,\n            [template.varName]: e.target.value\n          }\n        }));\n        this.textGenerator();\n        let txt = \"\";\n        this.arr.forEach(v => txt += v);\n        this.arr = [];\n        this.setState({\n          text: txt\n        });\n      };\n\n      label.innerHTML = template.varName || \"{noname}\";\n      label.htmlFor = \"t\" + (index + 1);\n      newDiv.appendChild(label);\n      newDiv.appendChild(input);\n      newDiv.appendChild(check);\n      div.appendChild(newDiv);\n    });\n    const div2 = document.getElementById(\"addRecBigDiv\");\n    await this.state.recipients.forEach((rec, index) => {\n      if (index !== 0) {\n        const input = document.createElement(\"input\");\n        const button = document.createElement(\"button\");\n        const div = document.createElement(\"div\");\n        input.value = rec;\n        div.className = \"addRecDiv\";\n        div.style.display = \"flex\";\n        this.setState({\n          recCount: this.state.recCount + 1\n        });\n        input.id = \"to\" + this.state.recCount;\n        button.innerHTML = \"X\";\n        input.style.display = \"flex\";\n        input.className = \"formInputRec\";\n        button.className = \"delButRec\";\n        button.type = \"button\";\n\n        button.onclick = () => {\n          input.parentNode.removeChild(input);\n          button.style.display = \"none\";\n        };\n\n        div.appendChild(input);\n        div.appendChild(button);\n        div2.appendChild(div);\n      }\n    });\n  }\n\n  async sendMail() {\n    const from = document.getElementById(\"from\").value;\n    let to = \"\";\n\n    for (let i = 1; i <= this.state.recCount; i++) {\n      const rec = document.getElementById(\"to\" + i).value;\n      to += rec;\n\n      if (i !== this.state.recCount) {\n        to += \",\";\n      }\n    }\n\n    const title = document.getElementById(\"title\").value;\n    const text = document.getElementById(\"text\").value;\n    await fetch(\"/useTemplate/send\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: \"gorsimonyan200307@gmail.com\",\n        pass: \"gor07072003\",\n        from: from,\n        to: to,\n        subject: title,\n        text: text\n      })\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  async addRecipient() {\n    const input = document.createElement(\"input\");\n    const delButton = document.createElement(\"button\");\n    const div = document.createElement(\"div\");\n    await this.setState({\n      rId: this.state.rId + 1\n    });\n    div.style.display = \"flex\";\n    div.className = \"addRecDiv\";\n    input.id = \"recipients\" + this.state.rId;\n    input.style.display = \"flex\";\n    input.className = \"formInputRec\";\n    delButton.className = \"delButRec\";\n    delButton.type = \"button\";\n    delButton.id = \"del\" + this.state.rId;\n    delButton.innerHTML = \"X\";\n\n    delButton.onclick = () => {\n      input.parentNode.removeChild(input);\n      delButton.style.display = \"none\";\n    };\n\n    const bigDiv = document.getElementById(\"addRecBigDiv\");\n    div.appendChild(input);\n    div.appendChild(delButton);\n    bigDiv.appendChild(div);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"width\": \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"back\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sendBox\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"sendForm\",\n          onSubmit: e => {\n            e.preventDefault();\n            window.history.replaceState(null, '', \"/\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"from\",\n              className: \"form\",\n              children: \"from\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"from\",\n              type: \"email\",\n              className: \"form\",\n              value: this.state.template.templateFrom,\n              onChange: e => {\n                this.setState(prevState => ({\n                  template: { ...prevState.template,\n                    templateFrom: e.target.value\n                  }\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"to\",\n              className: \"form\",\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"to1\",\n              type: \"email\",\n              className: \"form\",\n              value: this.state.recipients[0],\n              onChange: e => {\n                this.setState(prevState => ({\n                  recipients: { ...prevState.recipients,\n                    [0]: e.target.value\n                  }\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              id: \"addRec\",\n              onClick: () => this.addRecipient(),\n              children: \"Add Recipient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"addRecBigDiv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"titleLabel\",\n              htmlFor: \"title\",\n              className: \"form\",\n              children: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"title\",\n              className: \"form\",\n              value: this.state.template.templateTitle,\n              onChange: e => {\n                this.setState(prevState => ({\n                  template: { ...prevState.template,\n                    templateTitle: e.target.value\n                  }\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"forVars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"text\",\n              className: \"form\",\n              id: \"textLabel\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"text\",\n              value: this.state.text,\n              className: \"form\",\n              onChange: e => this.setState({\n                text: e.target.value,\n                txt: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"submit\",\n              type: \"submit\",\n              className: \"form\",\n              onClick: this.sendMail,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SendTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/sendTemplate.js"],"names":["React","Component","Link","SendTemplate","constructor","props","state","show","variables","template","txt","templateText","text","recipients","recCount","wordsForCheck","arr","vars","varsIndividual","UseTemplateFunc","bind","sendMail","textGenerator","wordFinder","addRecipient","check","componentDidMount","setState","componentDidUpdate","prevProps","prevState","snapshot","word","start","st","includes","i","length","forEach","element","push","replace","slice","undefined","splice","newWord","split","checkbox","div","document","getElementById","v","copy","Object","assign","varName","copy2","console","log","name","index","style","borderStyle","borderColor","paddingTop","paddingBottom","paddingLeft","label","createElement","input","newDiv","className","type","id","onclick","e","target","onchange","value","innerHTML","htmlFor","appendChild","div2","rec","button","display","parentNode","removeChild","from","to","title","fetch","method","headers","body","JSON","stringify","user","pass","subject","then","res","apiResponse","delButton","rId","bigDiv","render","preventDefault","window","history","replaceState","templateFrom","templateTitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport {Link} from \"react-router-dom\";\n\nclass SendTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            show: props.show,\n            variables: {},\n            template: props.template[0],\n            txt : props.template[0].templateText,\n            text: props.template[0].templateText,\n            recipients : props.recipients,\n            recCount: 1,\n        }\n        this.wordsForCheck = []\n        this.arr = []\n        this.vars = props.vars\n        this.varsIndividual = {}\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n        this.sendMail = this.sendMail.bind(this)\n        this.textGenerator = this.textGenerator.bind(this)\n        this.wordFinder = this.wordFinder.bind(this)\n        this.addRecipient = this.addRecipient.bind(this)\n        this.check = this.check.bind(this)\n    }\n\n    componentDidMount() {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    wordFinder(word){\n        let start = null\n        let st = 0\n        if(word.includes(\"{\") && word.includes(\"}\")) {\n            for (let i = 0; i < word.length; i++) {\n                if (word[0] !== \"{\"){\n                    this.wordsForCheck.forEach(element => {\n                        if(this.state.variables[element] === \"\"){\n                            this.arr.push(\"{\" + element + \"}\")\n                        }\n                        else {\n                            this.arr.push(this.state.variables[element])\n                        }\n                    })\n                    this.wordsForCheck = []\n                }\n                if (word[i] === \"{\") {\n                    start = i\n                    if (st !== null){\n                        this.arr.push(word.replace(word.slice(i, word.length), \"\"))\n                        word = word.replace(word.slice(st, i), \"\")\n                        st = null\n                        if (start !== null){\n                            start = 0\n                        }\n                    }\n                }\n                else if (word[i] === \"}\") {\n                    if (start !== null) {\n                        if (this.state.variables[word.slice(start + 1, i)] !== undefined) {\n                            this.wordsForCheck.splice(0, 0, word.slice(start + 1, i))\n                        }\n                            let newWord = word.replace(word.slice(start, i + 1), \"\")\n                            this.wordFinder(newWord)\n                            return\n\n                    }\n                }\n            }\n        }\n        else {\n            this.wordsForCheck.forEach(element => {\n                if(this.state.variables[element] === \"\"){\n                    this.arr.push(\"{\" + element + \"}\")\n                }\n                else {\n                    this.arr.push(this.state.variables[element])\n                }\n            })\n            this.wordsForCheck = []\n            this.arr.push(word)\n        }\n    }\n\n    textGenerator(){\n        const text = this.state.txt.split(\" \")\n        for(let i = 1; i <= text.length; i+=2){\n            text.splice(i, 0, \" \")\n        }\n        text.forEach(word => {\n            this.wordFinder(word, [])\n        })\n    }\n\n    check(checkbox){\n\n    }\n\n    async UseTemplateFunc(){\n        const div = document.getElementById(\"forVars\")\n        await this.vars.forEach(v => {\n            const copy = Object.assign(this.state.variables, {[v.varName]: \"{\" + [v.varName] + \"}\"})\n            const copy2 = Object.assign(this.varsIndividual, {[v.varName]: [\"{\" + [v.varName] + \"}\"]})\n            this.varsIndividual = copy2\n            console.log(this.varsIndividual.name)\n            this.setState({variables : copy})\n        })\n        await this.vars.forEach((template, index) => {\n            div.style.borderStyle = \"groove\"\n            div.style.borderColor = \"black\"\n            div.style.paddingTop = \"10px\"\n            div.style.paddingBottom = \"10px\"\n            div.style.paddingLeft = \"10px\"\n            const label = document.createElement(\"label\")\n            const input = document.createElement(\"input\")\n            const newDiv = document.createElement(\"div\")\n            const check = document.createElement(\"input\")\n            check.className = \"checkbox\"\n            check.type = \"checkbox\"\n            check.id = index + 1\n            check.onclick = (e) => this.check(e.target)\n            input.id = \"t\" + (index + 1)\n            input.onchange = (e) => {\n                this.setState(prevState => ({\n                    variables : {\n                        ...prevState.variables,\n                        [template.varName] : e.target.value\n                    }\n                }))\n                this.textGenerator()\n                let txt = \"\"\n                this.arr.forEach(v => txt += v)\n                this.arr = []\n                this.setState({text: txt})\n            }\n            label.innerHTML = template.varName || \"{noname}\"\n            label.htmlFor = \"t\" + (index + 1)\n            newDiv.appendChild(label)\n            newDiv.appendChild(input)\n            newDiv.appendChild(check)\n            div.appendChild(newDiv)\n        })\n        const div2= document.getElementById(\"addRecBigDiv\")\n        await this.state.recipients.forEach((rec, index) => {\n            if (index !== 0){\n                const input = document.createElement(\"input\")\n                const button = document.createElement(\"button\")\n                const div = document.createElement(\"div\")\n                input.value = rec\n                div.className = \"addRecDiv\"\n                div.style.display = \"flex\"\n                this.setState({recCount: this.state.recCount + 1})\n                input.id = \"to\" + this.state.recCount\n                button.innerHTML = \"X\"\n                input.style.display = \"flex\"\n                input.className = \"formInputRec\"\n                button.className = \"delButRec\"\n                button.type = \"button\"\n                button.onclick = () => {\n                    input.parentNode.removeChild(input)\n                    button.style.display = \"none\"\n                }\n                div.appendChild(input)\n                div.appendChild(button)\n                div2.appendChild(div)\n            }\n        })\n    }\n\n    async sendMail(){\n        const from = document.getElementById(\"from\").value\n        let to = \"\"\n        for (let i = 1; i <= this.state.recCount; i++){\n            const rec = document.getElementById(\"to\" + i).value\n            to += rec\n            if (i !== this.state.recCount){\n                to += \",\"\n            }\n        }\n        const title = document.getElementById(\"title\").value\n        const text = document.getElementById(\"text\").value\n        await fetch(\"/useTemplate/send\", {\n            method:'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                user: \"gorsimonyan200307@gmail.com\",\n                pass: \"gor07072003\",\n                from: from,\n                to: to,\n                subject: title,\n                text: text\n            })\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n    }\n\n    async addRecipient(){\n        const input = document.createElement(\"input\")\n        const delButton = document.createElement(\"button\")\n        const div = document.createElement(\"div\")\n        await this.setState({rId : this.state.rId + 1})\n        div.style.display =\"flex\"\n        div.className = \"addRecDiv\"\n        input.id = \"recipients\" + this.state.rId\n        input.style.display = \"flex\"\n        input.className = \"formInputRec\"\n        delButton.className = \"delButRec\"\n        delButton.type = \"button\"\n        delButton.id = \"del\" + this.state.rId\n        delButton.innerHTML = \"X\"\n        delButton.onclick = () => {\n            input.parentNode.removeChild(input)\n            delButton.style.display = \"none\"\n        }\n        const bigDiv = document.getElementById(\"addRecBigDiv\")\n        div.appendChild(input)\n        div.appendChild(delButton)\n        bigDiv.appendChild(div)\n    }\n\n    render() {\n        return (\n            <div style={{\"width\" : \"100%\"}}>\n                <Link to=\"/\">\n                    <button id={\"back\"}>Back</button>\n                </Link>\n                <div  id={\"sendBox\"}>\n                    <form id={\"sendForm\"} onSubmit={e => {\n                        e.preventDefault()\n                        window.history.replaceState(null, '', \"/\")\n                    }}>\n                        <div>\n                            <label htmlFor=\"from\" className=\"form\">from</label>\n                            <input id={\"from\"} type=\"email\" className=\"form\" value={this.state.template.templateFrom} onChange={(e) => {this.setState(prevState => ({\n                                template : {\n                                    ...prevState.template,\n                                    templateFrom : e.target.value\n                                }\n                            }))}}/>\n                        </div>\n                        <div>\n                            <label htmlFor={\"to\"} className=\"form\">To</label>\n                            <input id={\"to1\"} type=\"email\" className=\"form\" value={this.state.recipients[0]} onChange={(e) => {this.setState(prevState => ({\n                                recipients: {\n                                    ...prevState.recipients,\n                                    [0]: e.target.value\n                                }\n                            }))}}/>\n                            <button type={\"button\"} id={\"addRec\"} onClick={() => this.addRecipient()}>Add Recipient</button>\n                        </div>\n                        <div id={\"addRecBigDiv\"}>\n\n                        </div>\n                        <div>\n                            <label id={\"titleLabel\"} htmlFor={\"title\"} className=\"form\">title</label>\n                            <input id={\"title\"} className=\"form\" value={this.state.template.templateTitle} onChange={(e) => {this.setState(prevState => ({\n                                template : {\n                                    ...prevState.template,\n                                    templateTitle : e.target.value\n                                }\n                            }))}}/>\n                        </div>\n                        <div id={\"forVars\"}>\n\n                        </div>\n                        <div>\n                            <label htmlFor={\"text\"} className={\"form\"} id={\"textLabel\"}>Text</label>\n                            <textarea id={\"text\"} value={this.state.text} className={\"form\"} onChange={(e) => this.setState({text: e.target.value, txt: e.target.value})}/>\n                        </div>\n                        <Link to={\"/\"}>\n                            <button id={\"submit\"} type={\"submit\"} className={\"form\"} onClick={this.sendMail}>Send</button>\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SendTemplate"]},"metadata":{},"sourceType":"module"}