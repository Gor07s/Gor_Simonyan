{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js\";\nimport React, { Component } from \"react\";\nimport SendTemplate from \"./sendTemplate\";\nimport ModTemplate from \"./modTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UseTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      apiResponseTo: \"\",\n      apiResponseVars: \"\",\n      myTempIsClick: false,\n      tempClicked: false,\n      templateId: null,\n      send: false,\n      mod: false,\n      template: {},\n      recipientsForSend: [],\n      varsForSend: [],\n      show: false,\n      text: \"\"\n    };\n    this.myTemplates = this.myTemplates.bind(this);\n    this.showMyTemps = this.showMyTemps.bind(this);\n    this.templateOnClick = this.templateOnClick.bind(this);\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n  }\n\n  templateOnClick(id) {\n    const template = this.state.apiResponse.filter(template => template.id == id)[0];\n    this.setState({\n      text: template.templateText,\n      tempClicked: true,\n      templateId: id\n    });\n  }\n\n  async myTemplates() {\n    const div = document.getElementById(\"forTemps\");\n    await fetch(\"/useTemplate/templates\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: JSON.parse(res)\n    }));\n    await fetch(\"/useTemplate/recipients\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponseTo: JSON.parse(res)\n    }));\n    await fetch(\"/useTemplate/vars\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponseVars: JSON.parse(res)\n    }));\n    this.state.apiResponse.forEach((template, index) => {\n      const ep = document.getElementById(index + 1);\n\n      if (ep === null) {\n        const p = document.createElement(\"p\");\n        p.id = index + 1;\n        p.innerHTML = template.templateName;\n\n        p.onclick = () => this.templateOnClick(p.id);\n\n        div.appendChild(p);\n      }\n    });\n  }\n\n  showMyTemps() {\n    this.myTemplates();\n    const temp = document.getElementById(\"forTemps\");\n\n    if (this.state.myTempIsClick) {\n      temp.style.display = \"none\";\n    } else {\n      temp.style.display = \"block\";\n    }\n\n    this.setState({\n      myTempIsClick: !this.state.myTempIsClick,\n      tempClicked: false,\n      templateId: null\n    });\n  }\n\n  async UseTemplateFunc(x) {\n    let rec = [];\n    this.state.apiResponseTo.filter(temp => temp.tableId == this.state.templateId).forEach(element => rec.push(element.email));\n    await this.setState({\n      template: this.state.apiResponse.filter(temp => temp.id == this.state.templateId)[0],\n      [x]: true,\n      recipientsForSend: rec,\n      varsForSend: this.state.apiResponseVars.filter(temp => temp.tableId == this.state.templateId),\n      show: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"UseTempsDiv\",\n      children: [!this.state.send && !this.state.mod && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"useTempsGeneral\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"useTemplatesMenu\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"defTemps\",\n            children: \"Default Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"myTemps\",\n            onClick: this.showMyTemps,\n            children: \"My Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"forTemps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 57\n      }, this), this.state.tempClicked && !this.state.send && !this.state.mod && /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"exampleSpan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"from\",\n            className: \"form\",\n            children: \"from\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"from\",\n            className: \"form\",\n            value: this.state.template.templateFrom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipients1\",\n            className: \"form\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"recipients1\",\n            type: \"email\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"titleDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"titleLabel\",\n            htmlFor: \"title\",\n            className: \"form\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"example\",\n          value: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"useButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"useTemplateButton\",\n            onClick: () => this.UseTemplateFunc(\"send\"),\n            children: \"Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"modTemplateButton\",\n            onClick: () => this.UseTemplateFunc(\"mod\"),\n            children: \"Modify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 83\n      }, this), this.state.send && /*#__PURE__*/_jsxDEV(SendTemplate, {\n        show: this.state.show,\n        template: this.state.template,\n        recipients: this.state.recipientsForSend,\n        vars: this.state.varsForSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }, this), this.state.mod && /*#__PURE__*/_jsxDEV(ModTemplate, {\n        show: this.state.show,\n        template: this.state.template,\n        recipients: this.state.recipientsForSend,\n        vars: this.state.varsForSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UseTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js"],"names":["React","Component","SendTemplate","ModTemplate","UseTemplate","constructor","props","state","apiResponse","apiResponseTo","apiResponseVars","myTempIsClick","tempClicked","templateId","send","mod","template","recipientsForSend","varsForSend","show","text","myTemplates","bind","showMyTemps","templateOnClick","UseTemplateFunc","id","filter","setState","templateText","div","document","getElementById","fetch","method","headers","then","res","JSON","parse","forEach","index","ep","p","createElement","innerHTML","templateName","onclick","appendChild","temp","style","display","x","rec","tableId","element","push","email","render","templateFrom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport SendTemplate from \"./sendTemplate\";\nimport ModTemplate from \"./modTemplate\";\n\nclass UseTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            apiResponse:\"\",\n            apiResponseTo:\"\",\n            apiResponseVars:\"\",\n            myTempIsClick: false,\n            tempClicked: false,\n            templateId: null,\n            send: false,\n            mod: false,\n            template: {},\n            recipientsForSend: [],\n            varsForSend: [],\n            show: false,\n            text: \"\"\n        }\n        this.myTemplates = this.myTemplates.bind(this)\n        this.showMyTemps = this.showMyTemps.bind(this)\n        this.templateOnClick = this.templateOnClick.bind(this)\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n    }\n\n    templateOnClick(id){\n        const template = this.state.apiResponse.filter(template => template.id == id)[0]\n\n        this.setState({text: template.templateText,\n                            tempClicked: true,\n                            templateId: id})\n    }\n\n    async myTemplates(){\n        const div = document.getElementById(\"forTemps\")\n        await fetch(\"/useTemplate/templates\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: JSON.parse(res)}))\n        await fetch(\"/useTemplate/recipients\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponseTo: JSON.parse(res)}))\n        await fetch(\"/useTemplate/vars\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponseVars: JSON.parse(res)}))\n        this.state.apiResponse.forEach((template, index) => {\n            const ep = document.getElementById(index+1)\n            if(ep === null) {\n                const p = document.createElement(\"p\")\n                p.id = index + 1\n                p.innerHTML = template.templateName\n                p.onclick = () => this.templateOnClick(p.id)\n                div.appendChild(p)\n            }\n        })\n    }\n\n    showMyTemps(){\n        this.myTemplates()\n        const temp = document.getElementById(\"forTemps\")\n        if(this.state.myTempIsClick){\n            temp.style.display = \"none\"\n        }\n        else {\n            temp.style.display = \"block\"\n        }\n        this.setState({myTempIsClick: !this.state.myTempIsClick,\n                            tempClicked: false,\n                            templateId: null})\n    }\n\n    async UseTemplateFunc(x){\n        let rec = []\n        this.state.apiResponseTo.filter(temp => temp.tableId == this.state.templateId).forEach(element => rec.push(element.email))\n        await this.setState({template: this.state.apiResponse.filter(temp => temp.id == this.state.templateId)[0],\n                            [x]: true,\n                            recipientsForSend: rec,\n                            varsForSend: this.state.apiResponseVars.filter(temp => temp.tableId == this.state.templateId),\n                            show: true})\n    }\n\n    render() {\n        return (\n            <div id={\"UseTempsDiv\"}>\n                {!this.state.send && !this.state.mod && <div id={\"useTempsGeneral\"}>\n                    <span id={\"useTemplatesMenu\"}>\n                        <p id={\"defTemps\"}>Default Templates</p>\n                        <p id={\"myTemps\"} onClick={this.showMyTemps}>My Templates</p>\n                    </span>\n                    <div id={\"forTemps\"}>\n\n                    </div>\n                </div> }\n                {this.state.tempClicked && !this.state.send && !this.state.mod && <span id={\"exampleSpan\"}>\n                    <div>\n                        <label htmlFor=\"from\" className={\"form\"}>from</label>\n                        <input id=\"from\" className={\"form\"} value={this.state.template.templateFrom}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"recipients1\" className={\"form\"}>To</label>\n                        <input id=\"recipients1\" type=\"email\" className={\"form\"}/>\n                    </div>\n                    <div id={\"titleDiv\"}>\n                        <label id={\"titleLabel\"} htmlFor=\"title\" className={\"form\"}>title</label>\n                        <input id=\"title\" className={\"form\"}/>\n                    </div>\n                    <textarea id={\"example\"} value={this.state.text}/>\n                    <div id={\"useButtons\"}>\n                        <button id={\"useTemplateButton\"} onClick={() => this.UseTemplateFunc(\"send\")}>Use</button>\n                        <button id={\"modTemplateButton\"} onClick={() => this.UseTemplateFunc(\"mod\")}>Modify</button>\n                    </div>\n                </span>}\n                {this.state.send && <SendTemplate show={this.state.show} template={this.state.template} recipients={this.state.recipientsForSend} vars={this.state.varsForSend}/>}\n                {this.state.mod && <ModTemplate show={this.state.show} template={this.state.template} recipients={this.state.recipientsForSend} vars={this.state.varsForSend}/>}\n            </div>\n        )\n    }\n}\n\nexport default UseTemplate"]},"metadata":{},"sourceType":"module"}