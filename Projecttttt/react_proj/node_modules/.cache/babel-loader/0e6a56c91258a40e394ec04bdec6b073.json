{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/sendTemplate.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SendTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: props.show,\n      variables: {},\n      template: props.template,\n      txt: props.template.templateText,\n      text: props.template.templateText,\n      recipients: props.recipients,\n      recCount: 1\n    };\n    this.wordsForCheck = [];\n    this.arr = [];\n    this.vars = props.vars;\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n    this.sendMail = this.sendMail.bind(this);\n    this.textGenerator = this.textGenerator.bind(this);\n    this.wordFinder = this.wordFinder.bind(this);\n    this.addRecipient = this.addRecipient.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.show) {\n      this.UseTemplateFunc();\n      this.setState({\n        show: false\n      });\n    }\n  }\n\n  wordFinder(word) {\n    let start = null;\n    let st = 0;\n\n    if (word.includes(\"{\") && word.includes(\"}\")) {\n      for (let i = 0; i < word.length; i++) {\n        if (word[0] !== \"{\") {\n          this.wordsForCheck.forEach(element => {\n            if (this.state.variables[element] === \"\") {\n              this.arr.push(\"{\" + element + \"}\");\n            } else {\n              this.arr.push(this.state.variables[element]);\n            }\n          });\n          this.wordsForCheck = [];\n        }\n\n        if (word[i] === \"{\") {\n          start = i;\n\n          if (st !== null) {\n            this.arr.push(word.replace(word.slice(i, word.length), \"\"));\n            word = word.replace(word.slice(st, i), \"\");\n            st = null;\n\n            if (start !== null) {\n              start = 0;\n            }\n          }\n        } else if (word[i] === \"}\") {\n          if (start !== null) {\n            this.wordsForCheck.splice(0, 0, word.slice(start + 1, i));\n            let newWord = word.replace(word.slice(start, i + 1), \"\");\n            this.wordFinder(newWord);\n            return;\n          }\n        }\n      }\n    } else {\n      this.wordsForCheck.forEach(element => {\n        if (this.state.variables[element] === \"\") {\n          this.arr.push(\"{\" + element + \"}\");\n        } else {\n          this.arr.push(this.state.variables[element]);\n        }\n      });\n      this.wordsForCheck = [];\n      this.arr.push(word);\n    }\n  }\n\n  textGenerator() {\n    const text = this.state.txt.split(\" \");\n\n    for (let i = 1; i <= text.length; i += 2) {\n      text.splice(i, 0, \" \");\n    }\n\n    text.forEach(word => {\n      this.wordFinder(word, []);\n    });\n  }\n\n  async UseTemplateFunc() {\n    const textLabel = document.getElementById(\"textLabel\");\n    const form = document.getElementById(\"sendForm\");\n    await this.vars.forEach(v => {\n      const copy = Object.assign(this.state.variables, {\n        [v.varName]: \"{\" + [v.varName] + \"}\"\n      });\n      this.setState({\n        variables: copy\n      });\n    });\n    await this.vars.forEach((template, index) => {\n      const label = document.createElement(\"label\");\n      const input = document.createElement(\"input\");\n      input.id = \"t\" + (index + 1);\n\n      input.onchange = e => {\n        this.setState(prevState => ({\n          variables: { ...prevState.variables,\n            [template.varName]: e.target.value\n          }\n        }));\n        this.textGenerator();\n        let txt = \"\";\n        this.arr.forEach(v => txt += v);\n        this.arr = [];\n        this.setState({\n          text: txt\n        });\n      };\n\n      label.innerHTML = template.varName;\n      label.htmlFor = \"t\" + (index + 1);\n      label.style.display = \"block\";\n      form.appendChild(label);\n      form.appendChild(input);\n      form.insertBefore(input, textLabel);\n      form.insertBefore(label, input);\n    });\n    const addButton = document.getElementById(\"addRec\");\n    await this.state.recipients.forEach((rec, index) => {\n      if (index !== 0) {\n        const input = document.createElement(\"input\");\n        const button = document.createElement(\"button\");\n        input.value = rec;\n        this.setState({\n          recCount: this.state.recCount + 1\n        });\n        input.id = \"to\" + this.state.recCount;\n        button.innerHTML = \"X\";\n        input.style.display = \"flex\";\n        input.className = \"form\";\n        button.type = \"button\";\n\n        button.onclick = () => {\n          input.parentNode.removeChild(input);\n          button.style.display = \"none\";\n        };\n\n        form.appendChild(input);\n        form.insertBefore(input, addButton);\n        form.appendChild(button);\n        form.insertBefore(button, addButton);\n      }\n    });\n  }\n\n  async sendMail() {\n    const from = document.getElementById(\"from\").value;\n    let to = \"\";\n\n    for (let i = 1; i <= this.state.recCount; i++) {\n      const rec = document.getElementById(\"to\" + i).value;\n      to += rec;\n\n      if (i !== this.state.recCount) {\n        to += \",\";\n      }\n    }\n\n    const title = document.getElementById(\"title\").value;\n    const text = document.getElementById(\"text\").value;\n    await fetch(\"/useTemplate/send\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: \"gorsimonyan200307@gmail.com\",\n        pass: \"gor07072003\",\n        from: from,\n        to: to,\n        subject: title,\n        text: text\n      })\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  async addRecipient() {\n    const input = document.createElement(\"input\");\n    const delButton = document.createElement(\"button\");\n    const div = document.createElement(\"div\");\n    await this.setState({\n      rId: this.state.rId + 1\n    });\n    div.style.display = \"flex\";\n    div.className = \"addRecDiv\";\n    input.id = \"recipients\" + this.state.rId;\n    input.style.display = \"flex\";\n    input.className = \"formInputRec\";\n    delButton.className = \"delButRec\";\n    delButton.type = \"button\";\n    delButton.id = \"del\" + this.state.rId;\n    delButton.innerHTML = \"X\";\n\n    delButton.onclick = () => {\n      input.parentNode.removeChild(input);\n      delButton.style.display = \"none\";\n    };\n\n    const bigDiv = document.getElementById(\"addRecBigDiv\");\n    div.appendChild(input);\n    div.appendChild(delButton);\n    bigDiv.appendChild(div);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sendBox\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"sendForm\",\n        onSubmit: e => {\n          e.preventDefault();\n          window.history.replaceState(null, '', \"/\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"from\",\n            className: \"form\",\n            children: \"from\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"from\",\n            type: \"email\",\n            className: \"form\",\n            value: this.state.template.templateFrom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"to\",\n            className: \"form\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"to1\",\n            type: \"email\",\n            className: \"form\",\n            value: this.state.recipients[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"addRec\",\n            onClick: () => this.addRecipient(),\n            children: \"Add Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"addRecBigDiv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"titleLabel\",\n            htmlFor: \"title\",\n            className: \"form\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            className: \"form\",\n            value: this.state.template.templateTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            className: \"form\",\n            id: \"textLabel\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            value: this.state.text,\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"form\",\n          onClick: this.sendMail,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SendTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/sendTemplate.js"],"names":["React","Component","SendTemplate","constructor","props","state","show","variables","template","txt","templateText","text","recipients","recCount","wordsForCheck","arr","vars","UseTemplateFunc","bind","sendMail","textGenerator","wordFinder","addRecipient","componentDidMount","setState","componentDidUpdate","prevProps","prevState","snapshot","word","start","st","includes","i","length","forEach","element","push","replace","slice","splice","newWord","split","textLabel","document","getElementById","form","v","copy","Object","assign","varName","index","label","createElement","input","id","onchange","e","target","value","innerHTML","htmlFor","style","display","appendChild","insertBefore","addButton","rec","button","className","type","onclick","parentNode","removeChild","from","to","title","fetch","method","headers","body","JSON","stringify","user","pass","subject","then","res","apiResponse","delButton","div","rId","bigDiv","render","preventDefault","window","history","replaceState","templateFrom","templateTitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nclass SendTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            show: props.show,\n            variables: {},\n            template: props.template,\n            txt : props.template.templateText,\n            text: props.template.templateText,\n            recipients : props.recipients,\n            recCount: 1\n        }\n        this.wordsForCheck = []\n        this.arr = []\n        this.vars = props.vars\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n        this.sendMail = this.sendMail.bind(this)\n        this.textGenerator = this.textGenerator.bind(this)\n        this.wordFinder = this.wordFinder.bind(this)\n        this.addRecipient = this.addRecipient.bind(this)\n    }\n\n    componentDidMount() {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.show){\n            this.UseTemplateFunc()\n            this.setState({show: false})\n        }\n    }\n\n    wordFinder(word){\n        let start = null\n        let st = 0\n        if(word.includes(\"{\") && word.includes(\"}\")) {\n            for (let i = 0; i < word.length; i++) {\n                if (word[0] !== \"{\"){\n                    this.wordsForCheck.forEach(element => {\n                        if(this.state.variables[element] === \"\"){\n                            this.arr.push(\"{\" + element + \"}\")\n                        }\n                        else {\n                            this.arr.push(this.state.variables[element])\n                        }\n                    })\n                    this.wordsForCheck = []\n                }\n                if (word[i] === \"{\") {\n                    start = i\n                    if (st !== null){\n                        this.arr.push(word.replace(word.slice(i, word.length), \"\"))\n                        word = word.replace(word.slice(st, i), \"\")\n                        st = null\n                        if (start !== null){\n                            start = 0\n                        }\n                    }\n                }\n                else if (word[i] === \"}\") {\n                    if (start !== null) {\n                        this.wordsForCheck.splice(0, 0, word.slice(start + 1, i))\n                        let newWord = word.replace(word.slice(start, i + 1), \"\")\n                        this.wordFinder(newWord)\n                        return\n                    }\n                }\n            }\n        }\n        else {\n            this.wordsForCheck.forEach(element => {\n                if(this.state.variables[element] === \"\"){\n                    this.arr.push(\"{\" + element + \"}\")\n                }\n                else {\n                    this.arr.push(this.state.variables[element])\n                }\n            })\n            this.wordsForCheck = []\n            this.arr.push(word)\n        }\n    }\n\n    textGenerator(){\n        const text = this.state.txt.split(\" \")\n        for(let i = 1; i <= text.length; i+=2){\n            text.splice(i, 0, \" \")\n        }\n        text.forEach(word => {\n            this.wordFinder(word, [])\n        })\n    }\n\n    async UseTemplateFunc(){\n        const textLabel = document.getElementById(\"textLabel\")\n        const form = document.getElementById(\"sendForm\")\n        await this.vars.forEach(v => {\n            const copy = Object.assign(this.state.variables, {[v.varName]: \"{\" + [v.varName] + \"}\"})\n            this.setState({variables : copy})\n        })\n        await this.vars.forEach((template, index) => {\n            const label = document.createElement(\"label\")\n            const input = document.createElement(\"input\")\n            input.id = \"t\" + (index + 1)\n            input.onchange = (e) => {\n                this.setState(prevState => ({\n                    variables : {\n                        ...prevState.variables,\n                        [template.varName] : e.target.value\n                    }\n                }))\n                this.textGenerator()\n                let txt = \"\"\n                this.arr.forEach(v => txt += v)\n                this.arr = []\n                this.setState({text: txt})\n            }\n            label.innerHTML = template.varName\n            label.htmlFor = \"t\" + (index + 1)\n            label.style.display = \"block\"\n            form.appendChild(label)\n            form.appendChild(input)\n            form.insertBefore(input, textLabel)\n            form.insertBefore(label, input)\n        })\n        const addButton = document.getElementById(\"addRec\")\n        await this.state.recipients.forEach((rec, index) => {\n            if (index !== 0){\n                const input = document.createElement(\"input\")\n                const button = document.createElement(\"button\")\n                input.value = rec\n                this.setState({recCount: this.state.recCount + 1})\n                input.id = \"to\" + this.state.recCount\n                button.innerHTML = \"X\"\n                input.style.display = \"flex\"\n                input.className = \"form\"\n                button.type = \"button\"\n                button.onclick = () => {\n                    input.parentNode.removeChild(input)\n                    button.style.display = \"none\"\n                }\n                form.appendChild(input)\n                form.insertBefore(input, addButton)\n                form.appendChild(button)\n                form.insertBefore(button, addButton)\n            }\n        })\n    }\n\n    async sendMail(){\n        const from = document.getElementById(\"from\").value\n        let to = \"\"\n        for (let i = 1; i <= this.state.recCount; i++){\n            const rec = document.getElementById(\"to\" + i).value\n            to += rec\n            if (i !== this.state.recCount){\n                to += \",\"\n            }\n        }\n        const title = document.getElementById(\"title\").value\n        const text = document.getElementById(\"text\").value\n        await fetch(\"/useTemplate/send\", {\n            method:'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                user: \"gorsimonyan200307@gmail.com\",\n                pass: \"gor07072003\",\n                from: from,\n                to: to,\n                subject: title,\n                text: text\n            })\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n    }\n\n    async addRecipient(){\n        const input = document.createElement(\"input\")\n        const delButton = document.createElement(\"button\")\n        const div = document.createElement(\"div\")\n        await this.setState({rId : this.state.rId + 1})\n        div.style.display =\"flex\"\n        div.className = \"addRecDiv\"\n        input.id = \"recipients\" + this.state.rId\n        input.style.display = \"flex\"\n        input.className = \"formInputRec\"\n        delButton.className = \"delButRec\"\n        delButton.type = \"button\"\n        delButton.id = \"del\" + this.state.rId\n        delButton.innerHTML = \"X\"\n        delButton.onclick = () => {\n            input.parentNode.removeChild(input)\n            delButton.style.display = \"none\"\n        }\n        const bigDiv = document.getElementById(\"addRecBigDiv\")\n        div.appendChild(input)\n        div.appendChild(delButton)\n        bigDiv.appendChild(div)\n    }\n\n    render() {\n        return (\n            <div  id={\"sendBox\"}>\n                <form id={\"sendForm\"} onSubmit={e => {\n                    e.preventDefault()\n                    window.history.replaceState(null, '', \"/\")\n                }}>\n                    <div>\n                        <label htmlFor=\"from\" className=\"form\">from</label>\n                        <input id={\"from\"} type=\"email\" className=\"form\" value={this.state.template.templateFrom}/>\n                    </div>\n                    <div>\n                        <label htmlFor={\"to\"} className=\"form\">To</label>\n                        <input id={\"to1\"} type=\"email\" className=\"form\" value={this.state.recipients[0]}/>\n                        <button type={\"button\"} id={\"addRec\"} onClick={() => this.addRecipient()}>Add Recipient</button>\n                    </div>\n                    <div id={\"addRecBigDiv\"}></div>\n                    <div>\n                        <label id={\"titleLabel\"} htmlFor={\"title\"} className=\"form\">title</label>\n                        <input id={\"title\"} className=\"form\" value={this.state.template.templateTitle}/>\n                    </div>\n                    <div>\n                        <label htmlFor={\"text\"} className={\"form\"} id={\"textLabel\"}>Text</label>\n                        <textarea id={\"text\"} value={this.state.text} className={\"form\"}/>\n                    </div>\n                        <button id={\"submit\"} type={\"submit\"} className={\"form\"} onClick={this.sendMail}>Send</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SendTemplate"]},"metadata":{},"sourceType":"module"}