{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js\";\nimport React, { Component } from \"react\";\nimport SendTemplate from \"./sendTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UseTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      apiResponseTo: \"\",\n      apiResponseVars: \"\",\n      myTempIsClick: false,\n      tempClicked: false,\n      templateId: null,\n      send: false,\n      template: {},\n      recipientsForSend: [],\n      varsForSend: []\n    };\n    this.wordsForCheck = [];\n    this.arr = [];\n    this.words = [];\n    this.recipients = [];\n    this.vars = [];\n    this.myTemplates = this.myTemplates.bind(this);\n    this.showMyTemps = this.showMyTemps.bind(this);\n    this.templateOnClick = this.templateOnClick.bind(this);\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n  }\n\n  templateOnClick(id) {\n    const p = document.getElementById(\"example\");\n    this.words.filter(template => {\n      if (template.id == id) {\n        p.innerHTML = template.templateText;\n        this.setState({\n          tempClicked: true\n        });\n        this.setState({\n          templateId: id\n        });\n      }\n    });\n  }\n\n  async myTemplates() {\n    const div = document.getElementById(\"useTemplatesMenu\");\n    const myTemps = document.getElementById(\"myTemps\");\n    await fetch(\"/useTemplate/templates\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n    await fetch(\"/useTemplate/recipients\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponseTo: res\n    }));\n    await fetch(\"/useTemplate/vars\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponseVars: res\n    }));\n    let templates = this.state.apiResponse.substring(1, this.state.apiResponse.length - 1).split('},');\n\n    if (templates[0] === \"\") {\n      return;\n    }\n\n    templates.forEach((template, index) => {\n      if (index !== templates.length - 1) {\n        templates[index] += \"}\";\n      }\n    });\n    let recipients = this.state.apiResponseTo.substring(1, this.state.apiResponseTo.length - 1).split('},');\n    recipients.forEach((template, index) => {\n      if (index !== recipients.length - 1) {\n        recipients[index] += \"}\";\n      }\n    });\n    let vars = this.state.apiResponseVars.substring(1, this.state.apiResponseVars.length - 1).split('},');\n    vars.forEach((template, index) => {\n      if (index !== vars.length - 1) {\n        vars[index] += \"}\";\n      }\n    });\n    this.words = [];\n    this.recipients = [];\n    this.vars = [];\n\n    for (let i = 0; i < templates.length; i++) {\n      let a = JSON.parse(templates[i]);\n      this.words.push(a);\n    }\n\n    for (let i = 0; i < recipients.length; i++) {\n      let a = JSON.parse(recipients[i]);\n      this.recipients.push(a);\n    }\n\n    for (let i = 0; i < vars.length; i++) {\n      let a = JSON.parse(vars[i]);\n      this.vars.push(a);\n    }\n\n    this.words.forEach((template, index) => {\n      const ep = document.getElementById(index + 1);\n\n      if (ep === null) {\n        const p = document.createElement(\"p\");\n        p.id = index + 1;\n        p.innerHTML = template.templateName;\n\n        p.onclick = () => this.templateOnClick(p.id);\n\n        div.appendChild(p);\n        div.insertBefore(p, myTemps);\n      }\n    });\n  }\n\n  showMyTemps() {\n    this.myTemplates();\n\n    for (let i = 1; i <= this.words.length; i++) {\n      const p = document.getElementById(i);\n\n      if (this.state.myTempIsClick) {\n        p.style.display = \"none\";\n        const g = document.getElementById(\"example\");\n        g.innerHTML = \"\";\n      } else {\n        p.style.display = \"block\";\n      }\n    }\n\n    this.setState({\n      myTempIsClick: !this.state.myTempIsClick,\n      tempClicked: false,\n      templateId: null\n    });\n  }\n\n  async UseTemplateFunc() {\n    await this.setState({\n      template: this.words.filter(temp => temp.id == this.state.templateId)[0],\n      send: true,\n      recipientsForSend: this.recipients.filter(temp => temp.tableId == this.state.templateId),\n      varsForSend: this.vars.filter(temp => temp.tableId == this.state.templateId)\n    });\n    console.log(this.state.varsForSend);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !this.state.send && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"useTempsGeneral\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"useTemplatesMenu\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"defTemps\",\n            children: \"Default Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"myTemps\",\n            onClick: this.showMyTemps,\n            children: \"My Templates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), this.state.tempClicked && /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"useTemplateButton\",\n            onClick: this.UseTemplateFunc,\n            children: \"Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UseTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js"],"names":["React","Component","SendTemplate","UseTemplate","constructor","props","state","apiResponse","apiResponseTo","apiResponseVars","myTempIsClick","tempClicked","templateId","send","template","recipientsForSend","varsForSend","wordsForCheck","arr","words","recipients","vars","myTemplates","bind","showMyTemps","templateOnClick","UseTemplateFunc","id","p","document","getElementById","filter","innerHTML","templateText","setState","div","myTemps","fetch","method","headers","then","res","text","templates","substring","length","split","forEach","index","i","a","JSON","parse","push","ep","createElement","templateName","onclick","appendChild","insertBefore","style","display","g","temp","tableId","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport SendTemplate from \"./sendTemplate\";\n\nclass UseTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            apiResponse:\"\",\n            apiResponseTo:\"\",\n            apiResponseVars:\"\",\n            myTempIsClick: false,\n            tempClicked: false,\n            templateId: null,\n            send: false,\n            template: {},\n            recipientsForSend: [],\n            varsForSend: []\n        }\n        this.wordsForCheck = []\n        this.arr = []\n        this.words = []\n        this.recipients = []\n        this.vars = []\n        this.myTemplates = this.myTemplates.bind(this)\n        this.showMyTemps = this.showMyTemps.bind(this)\n        this.templateOnClick = this.templateOnClick.bind(this)\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n    }\n\n    templateOnClick(id){\n        const p = document.getElementById(\"example\")\n        this.words.filter(template => {\n            if(template.id == id){\n                p.innerHTML = template.templateText\n                this.setState({tempClicked: true})\n                this.setState({templateId: id})\n            }\n        })\n    }\n\n    async myTemplates(){\n        const div = document.getElementById(\"useTemplatesMenu\")\n        const myTemps = document.getElementById(\"myTemps\")\n        await fetch(\"/useTemplate/templates\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n        await fetch(\"/useTemplate/recipients\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponseTo: res}))\n        await fetch(\"/useTemplate/vars\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponseVars: res}))\n        let templates = (this.state.apiResponse).substring(1,this.state.apiResponse.length-1).split('},')\n        if(templates[0] === \"\"){\n            return\n        }\n        templates.forEach((template, index) => {\n            if (index !== templates.length-1){\n                templates[index] += \"}\"\n            }\n        })\n        let recipients = (this.state.apiResponseTo).substring(1,this.state.apiResponseTo.length-1).split('},')\n        recipients.forEach((template, index) => {\n            if (index !== recipients.length-1){\n                recipients[index] += \"}\"\n            }\n        })\n        let vars = (this.state.apiResponseVars).substring(1,this.state.apiResponseVars.length-1).split('},')\n        vars.forEach((template, index) => {\n            if (index !== vars.length-1){\n                vars[index] += \"}\"\n            }\n        })\n        this.words = []\n        this.recipients =[]\n        this.vars = []\n        for(let i = 0; i < templates.length; i++) {\n            let a = JSON.parse(templates[i])\n            this.words.push(a)\n        }\n        for(let i = 0; i < recipients.length; i++) {\n            let a = JSON.parse(recipients[i])\n            this.recipients.push(a)\n        }\n        for(let i = 0; i < vars.length; i++) {\n            let a = JSON.parse(vars[i])\n            this.vars.push(a)\n        }\n        this.words.forEach((template, index) => {\n            const ep = document.getElementById(index+1)\n            if(ep === null) {\n                const p = document.createElement(\"p\")\n                p.id = index + 1\n                p.innerHTML = template.templateName\n                p.onclick = () => this.templateOnClick(p.id)\n                div.appendChild(p)\n                div.insertBefore(p, myTemps)\n            }\n        })\n    }\n\n    showMyTemps(){\n        this.myTemplates()\n        for(let i = 1; i <= this.words.length; i++){\n            const p = document.getElementById(i)\n            if(this.state.myTempIsClick){\n                p.style.display = \"none\"\n                const g = document.getElementById(\"example\")\n                g.innerHTML = \"\"\n            }\n            else {\n                p.style.display = \"block\"\n            }\n        }\n        this.setState({myTempIsClick: !this.state.myTempIsClick,\n                            tempClicked: false,\n                            templateId: null})\n    }\n\n    async UseTemplateFunc(){\n        await this.setState({template: this.words.filter(temp => temp.id == this.state.templateId)[0],\n                            send: true,\n                            recipientsForSend: this.recipients.filter(temp => temp.tableId == this.state.templateId),\n                            varsForSend: this.vars.filter(temp => temp.tableId == this.state.templateId)})\n        console.log(this.state.varsForSend)\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.send && <div id={\"useTempsGeneral\"}>\n                    <span id={\"useTemplatesMenu\"}>\n                        <p id={\"defTemps\"}>Default Templates</p>\n                        <p id={\"myTemps\"} onClick={this.showMyTemps}>My Templates</p>\n                    </span>\n                    <span>\n                        <p id={\"example\"}></p>\n                        {this.state.tempClicked && <button id={\"useTemplateButton\"} onClick={this.UseTemplateFunc}>Use</button>}\n                    </span>\n                </div>}\n\n            </div>\n        )\n    }\n}\n\nexport default UseTemplate"]},"metadata":{},"sourceType":"module"}