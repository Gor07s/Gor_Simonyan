{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js\";\nimport React, { Component } from \"react\";\nimport SendTemplate from \"./sendTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UseTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      myTempIsClick: false,\n      tempClicked: false,\n      text: \"\",\n      templateId: null,\n      send: false\n    };\n    this.words = [];\n    this.myTemplates = this.myTemplates.bind(this);\n    this.showMyTemps = this.showMyTemps.bind(this);\n    this.templateOnClick = this.templateOnClick.bind(this);\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n  }\n\n  templateOnClick(id) {\n    const p = document.getElementById(\"example\");\n    this.words.filter(template => {\n      if (template.id == id) {\n        p.innerHTML = template.templateText;\n        this.setState({\n          tempClicked: true\n        });\n        this.setState({\n          templateId: id\n        });\n      }\n    });\n  }\n\n  async myTemplates() {\n    const div = document.getElementById(\"useTemplatesMenu\");\n    const myTemps = document.getElementById(\"myTemps\");\n    await fetch(\"/useTemplate\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n    let templates = this.state.apiResponse.substring(1, this.state.apiResponse.length - 1).split('},');\n\n    if (templates[0] === \"\") {\n      return;\n    }\n\n    templates.forEach((template, index) => {\n      if (index !== templates.length - 1) {\n        templates[index] += \"}\";\n      }\n    });\n    this.words = [];\n\n    for (let i = 0; i < templates.length; i++) {\n      let a = JSON.parse(templates[i]);\n      this.words.push(a);\n    }\n\n    this.words.forEach((template, index) => {\n      const ep = document.getElementById(index + 1);\n\n      if (ep === null) {\n        const p = document.createElement(\"p\");\n        p.id = index + 1;\n        p.innerHTML = template.templateName;\n\n        p.onclick = () => this.templateOnClick(p.id);\n\n        div.appendChild(p);\n        div.insertBefore(p, myTemps);\n      }\n    });\n  }\n\n  showMyTemps() {\n    this.myTemplates();\n\n    for (let i = 1; i <= this.words.length; i++) {\n      const p = document.getElementById(i);\n\n      if (this.state.myTempIsClick) {\n        p.style.display = \"none\";\n        const g = document.getElementById(\"example\");\n        g.innerHTML = \"\";\n      } else {\n        p.style.display = \"block\";\n      }\n    }\n\n    this.setState({\n      myTempIsClick: !this.state.myTempIsClick,\n      tempClicked: false,\n      templateId: null\n    });\n  }\n\n  UseTemplateFunc() {\n    this.setState({\n      send: true\n    });\n    const from = document.getElementById(\"sendFrom\");\n    const to = document.getElementById(\"sendTo\");\n    const title = document.getElementById(\"sendTitle\");\n    const text = document.getElementById(\"sendText\");\n    const template = this.words.filter(temp => temp.id == this.state.id);\n    from.value = template.templateFrom;\n    title.value = template.templateTitle;\n    text.value = template.templatetext;\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <Menu width={'150px'} >\n      //     <p id={\"defaultTemplates\"} className={\"templateMenu\"}>Default Templates</p>\n      //     <p id={\"myTemplates\"} className={\"templateMenu\"}>My Templates</p>\n      // </Menu>\n      _jsxDEV(\"div\", {\n        children: [!this.state.send && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"useTempsGeneral\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"useTemplatesMenu\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"defTemps\",\n              children: \"Default Templates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"myTemps\",\n              onClick: this.showMyTemps,\n              children: \"My Templates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), this.state.tempClicked && /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"useTemplateButton\",\n              onClick: this.UseTemplateFunc,\n              children: \"Use\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 38\n        }, this), this.state.send && /*#__PURE__*/_jsxDEV(SendTemplate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default UseTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js"],"names":["React","Component","SendTemplate","UseTemplate","constructor","props","state","apiResponse","myTempIsClick","tempClicked","text","templateId","send","words","myTemplates","bind","showMyTemps","templateOnClick","UseTemplateFunc","id","p","document","getElementById","filter","template","innerHTML","templateText","setState","div","myTemps","fetch","method","headers","then","res","templates","substring","length","split","forEach","index","i","a","JSON","parse","push","ep","createElement","templateName","onclick","appendChild","insertBefore","style","display","g","from","to","title","temp","value","templateFrom","templateTitle","templatetext","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport SendTemplate from \"./sendTemplate\";\n\nclass UseTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            apiResponse:\"\",\n            myTempIsClick: false,\n            tempClicked: false,\n            text: \"\",\n            templateId: null,\n            send: false\n        }\n        this.words = []\n        this.myTemplates = this.myTemplates.bind(this)\n        this.showMyTemps = this.showMyTemps.bind(this)\n        this.templateOnClick = this.templateOnClick.bind(this)\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n\n        }\n\n    templateOnClick(id){\n        const p = document.getElementById(\"example\")\n        this.words.filter(template => {\n            if(template.id == id){\n                p.innerHTML = template.templateText\n                this.setState({tempClicked: true})\n                this.setState({templateId: id})\n            }\n        })\n    }\n\n    async myTemplates(){\n        const div = document.getElementById(\"useTemplatesMenu\")\n        const myTemps = document.getElementById(\"myTemps\")\n        await fetch(\"/useTemplate\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n        let templates = (this.state.apiResponse).substring(1,this.state.apiResponse.length-1).split('},')\n        if(templates[0] === \"\"){\n            return\n        }\n        templates.forEach((template, index) => {\n            if (index !== templates.length-1){\n                templates[index] += \"}\"\n            }\n        })\n        this.words = []\n        for(let i = 0; i < templates.length; i++) {\n            let a = JSON.parse(templates[i])\n            this.words.push(a)\n        }\n        this.words.forEach((template, index) => {\n            const ep = document.getElementById(index+1)\n            if(ep === null) {\n                const p = document.createElement(\"p\")\n                p.id = index + 1\n                p.innerHTML = template.templateName\n                p.onclick = () => this.templateOnClick(p.id)\n                div.appendChild(p)\n                div.insertBefore(p, myTemps)\n            }\n        })\n    }\n\n    showMyTemps(){\n        this.myTemplates()\n        for(let i = 1; i <= this.words.length; i++){\n            const p = document.getElementById(i)\n            if(this.state.myTempIsClick){\n                p.style.display = \"none\"\n                const g = document.getElementById(\"example\")\n                g.innerHTML = \"\"\n            }\n            else {\n                p.style.display = \"block\"\n            }\n        }\n        this.setState({myTempIsClick: !this.state.myTempIsClick,\n                            tempClicked: false,\n                            templateId: null})\n    }\n\n    UseTemplateFunc(){\n        this.setState({send: true})\n        const from = document.getElementById(\"sendFrom\")\n        const to = document.getElementById(\"sendTo\")\n        const title = document.getElementById(\"sendTitle\")\n        const text = document.getElementById(\"sendText\")\n        const template = this.words.filter(temp => temp.id == this.state.id)\n        from.value = template.templateFrom\n        title.value = template.templateTitle\n        text.value = template.templatetext\n    }\n\n    render() {\n        return (\n            // <Menu width={'150px'} >\n            //     <p id={\"defaultTemplates\"} className={\"templateMenu\"}>Default Templates</p>\n            //     <p id={\"myTemplates\"} className={\"templateMenu\"}>My Templates</p>\n            // </Menu>\n            <div>\n                {!this.state.send && <div id={\"useTempsGeneral\"}>\n                    <span id={\"useTemplatesMenu\"}>\n                        <p id={\"defTemps\"}>Default Templates</p>\n                        <p id={\"myTemps\"} onClick={this.showMyTemps}>My Templates</p>\n                    </span>\n                    <span>\n                        <p id={\"example\"}></p>\n                        {this.state.tempClicked && <button id={\"useTemplateButton\"} onClick={this.UseTemplateFunc}>Use</button>}\n                    </span>\n                </div>}\n                {this.state.send && <SendTemplate>\n\n                </SendTemplate>}\n            </div>\n        )\n    }\n}\n\nexport default UseTemplate"]},"metadata":{},"sourceType":"module"}