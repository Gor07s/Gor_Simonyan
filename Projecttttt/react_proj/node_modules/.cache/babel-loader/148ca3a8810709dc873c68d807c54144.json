{"ast":null,"code":"var _jsxFileName = \"/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UseTemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      apiResponseTo: \"\",\n      apiResponseVars: \"\",\n      myTempIsClick: false,\n      tempClicked: false,\n      text: \"\",\n      templateId: null,\n      send: false,\n      variables: {}\n    };\n    this.words = [];\n    this.recipients = [];\n    this.vars = [];\n    this.myTemplates = this.myTemplates.bind(this);\n    this.showMyTemps = this.showMyTemps.bind(this);\n    this.templateOnClick = this.templateOnClick.bind(this);\n    this.UseTemplateFunc = this.UseTemplateFunc.bind(this);\n    this.sendMail = this.sendMail.bind(this);\n    this.textGenerator = this.textGenerator.bind(this);\n    this.wordFinder = this.wordFinder.bind(this);\n  }\n\n  templateOnClick(id) {\n    const p = document.getElementById(\"example\");\n    this.words.filter(template => {\n      if (template.id == id) {\n        p.innerHTML = template.templateText;\n        this.setState({\n          tempClicked: true\n        });\n        this.setState({\n          templateId: id\n        });\n      }\n    });\n  }\n\n  async myTemplates() {\n    const div = document.getElementById(\"useTemplatesMenu\");\n    const myTemps = document.getElementById(\"myTemps\");\n    await fetch(\"/useTemplate/templates\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n    await fetch(\"/useTemplate/recipients\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponseTo: res\n    }));\n    await fetch(\"/useTemplate/vars\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponseVars: res\n    }));\n    let templates = this.state.apiResponse.substring(1, this.state.apiResponse.length - 1).split('},');\n\n    if (templates[0] === \"\") {\n      return;\n    }\n\n    templates.forEach((template, index) => {\n      if (index !== templates.length - 1) {\n        templates[index] += \"}\";\n      }\n    });\n    let recipients = this.state.apiResponseTo.substring(1, this.state.apiResponseTo.length - 1).split('},');\n    recipients.forEach((template, index) => {\n      if (index !== recipients.length - 1) {\n        recipients[index] += \"}\";\n      }\n    });\n    let vars = this.state.apiResponseVars.substring(1, this.state.apiResponseVars.length - 1).split('},');\n    vars.forEach((template, index) => {\n      if (index !== vars.length - 1) {\n        vars[index] += \"}\";\n      }\n    });\n    this.words = [];\n    this.recipients = [];\n    this.vars = [];\n\n    for (let i = 0; i < templates.length; i++) {\n      console.log(templates[i]);\n      let a = JSON.parse(templates[i]);\n      this.words.push(a);\n    }\n\n    for (let i = 0; i < recipients.length; i++) {\n      let a = JSON.parse(recipients[i]);\n      this.recipients.push(a);\n    }\n\n    for (let i = 0; i < vars.length; i++) {\n      let a = JSON.parse(vars[i]);\n      this.vars.push(a);\n    }\n\n    this.words.forEach((template, index) => {\n      const ep = document.getElementById(index + 1);\n\n      if (ep === null) {\n        const p = document.createElement(\"p\");\n        p.id = index + 1;\n        p.innerHTML = template.templateName;\n\n        p.onclick = () => this.templateOnClick(p.id);\n\n        div.appendChild(p);\n        div.insertBefore(p, myTemps);\n      }\n    });\n  }\n\n  showMyTemps() {\n    this.myTemplates();\n\n    for (let i = 1; i <= this.words.length; i++) {\n      const p = document.getElementById(i);\n\n      if (this.state.myTempIsClick) {\n        p.style.display = \"none\";\n        const g = document.getElementById(\"example\");\n        g.innerHTML = \"\";\n      } else {\n        p.style.display = \"block\";\n      }\n    }\n\n    this.setState({\n      myTempIsClick: !this.state.myTempIsClick,\n      tempClicked: false,\n      templateId: null\n    });\n  }\n\n  wordFinder(word, wordsForData) {\n    let start = null;\n\n    if (word.includes(\"{\") && word.includes(\"}\")) {\n      for (let i = 0; i < word.length; i++) {\n        if (word[i] === \"{\") {\n          start = i;\n        } else if (word[i] === \"}\") {\n          if (start !== null) {\n            wordsForData.push(word.slice(start + 1, i));\n            let newWord = word.replace(word.slice(start, i + 1), \"\");\n            this.wordFinder(newWord);\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  textGenerator() {\n    const text = this.state.text.split(\" \");\n\n    for (let i = 1; i <= text.length * 2 - 1; i += 2) {\n      text.splice(i, 0, \" \");\n    }\n\n    text.forEach(word => {\n      this.wordFinder(word, []);\n    });\n    console.log(text);\n  }\n\n  async UseTemplateFunc() {\n    const form = document.getElementById(\"sendForm\");\n    form.style.display = \"block\";\n    const from = document.getElementById(\"from\");\n    const to = document.getElementById(\"to\");\n    const title = document.getElementById(\"title\");\n    const textLabel = document.getElementById(\"textLabel\");\n    const template = this.words.filter(temp => temp.id == this.state.templateId)[0];\n    this.setState({\n      send: true,\n      text: template.templateText\n    });\n    const recipients = this.recipients.filter(temp => temp.tableId == this.state.templateId);\n    const vars = this.vars.filter(temp => temp.tableId == this.state.templateId);\n    await vars.forEach(v => {\n      const copy = Object.assign(this.state.variables, {\n        [v.varName]: \"\"\n      });\n      this.setState({\n        variables: copy\n      });\n    });\n    await vars.forEach((template, index) => {\n      const label = document.createElement(\"label\");\n      const input = document.createElement(\"input\");\n      input.id = \"t\" + (index + 1);\n\n      input.onchange = e => {\n        this.textGenerator();\n        this.setState(prevState => ({\n          variables: { ...prevState.variables,\n            [template.varName]: e.target.value\n          }\n        }));\n      };\n\n      label.innerHTML = template.varName;\n      label.htmlFor = \"t\" + (index + 1);\n      label.style.display = \"block\";\n      form.appendChild(label);\n      form.appendChild(input);\n      form.insertBefore(input, textLabel);\n      form.insertBefore(label, input);\n    });\n    from.value = template.templateFrom;\n    recipients.forEach(recipient => to.value += recipient.email);\n    title.value = template.templateTitle;\n  }\n\n  sendMail() {\n    const from = document.getElementById(\"from\").value;\n    const to = document.getElementById(\"to\").value;\n    const title = document.getElementById(\"title\").value;\n    const text = document.getElementById(\"text\").value;\n    fetch(\"/useTemplate/send\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: \"gorsimonyan200307@gmail.com\",\n        pass: \"gor07072003\",\n        from: from,\n        to: to,\n        subject: title,\n        text: text\n      })\n    }).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <Menu width={'150px'} >\n      //     <p id={\"defaultTemplates\"} className={\"templateMenu\"}>Default Templates</p>\n      //     <p id={\"myTemplates\"} className={\"templateMenu\"}>My Templates</p>\n      // </Menu>\n      _jsxDEV(\"div\", {\n        children: [!this.state.send && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"useTempsGeneral\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"useTemplatesMenu\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"defTemps\",\n              children: \"Default Templates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"myTemps\",\n              onClick: this.showMyTemps,\n              children: \"My Templates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this), this.state.tempClicked && /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"useTemplateButton\",\n              onClick: this.UseTemplateFunc,\n              children: \"Use\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"sendForm\",\n          style: {\n            \"display\": \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"from\",\n            className: \"form\",\n            children: \"from\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"from\",\n            type: \"email\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"to\",\n            className: \"form\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"to\",\n            type: \"email\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"form\",\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            className: \"form\",\n            id: \"textLabel\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"text\",\n            value: this.state.text + this.state.variables.name,\n            className: \"form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submit\",\n            type: \"submit\",\n            className: \"form\",\n            onClick: this.sendMail,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default UseTemplate;","map":{"version":3,"sources":["/home/gor/Project/Email_tamplate/react_proj/src/Components/useTemplate.js"],"names":["React","Component","UseTemplate","constructor","props","state","apiResponse","apiResponseTo","apiResponseVars","myTempIsClick","tempClicked","text","templateId","send","variables","words","recipients","vars","myTemplates","bind","showMyTemps","templateOnClick","UseTemplateFunc","sendMail","textGenerator","wordFinder","id","p","document","getElementById","filter","template","innerHTML","templateText","setState","div","myTemps","fetch","method","headers","then","res","templates","substring","length","split","forEach","index","i","console","log","a","JSON","parse","push","ep","createElement","templateName","onclick","appendChild","insertBefore","style","display","g","word","wordsForData","start","includes","slice","newWord","replace","splice","form","from","to","title","textLabel","temp","tableId","v","copy","Object","assign","varName","label","input","onchange","e","prevState","target","value","htmlFor","templateFrom","recipient","email","templateTitle","body","stringify","user","pass","subject","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAC,EADL;AAEPC,MAAAA,aAAa,EAAC,EAFP;AAGPC,MAAAA,eAAe,EAAC,EAHT;AAIPC,MAAAA,aAAa,EAAE,KAJR;AAKPC,MAAAA,WAAW,EAAE,KALN;AAMPC,MAAAA,IAAI,EAAE,EANC;AAOPC,MAAAA,UAAU,EAAE,IAPL;AAQPC,MAAAA,IAAI,EAAE,KARC;AASPC,MAAAA,SAAS,EAAE;AATJ,KAAX;AAWA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKI,QAAL,GAAgB,KAAKA,QAAL,CAAcJ,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKK,aAAL,GAAqB,KAAKA,aAAL,CAAmBL,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKM,UAAL,GAAkB,KAAKA,UAAL,CAAgBN,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDE,EAAAA,eAAe,CAACK,EAAD,EAAI;AACf,UAAMC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAV;AACA,SAAKd,KAAL,CAAWe,MAAX,CAAkBC,QAAQ,IAAI;AAC1B,UAAGA,QAAQ,CAACL,EAAT,IAAeA,EAAlB,EAAqB;AACjBC,QAAAA,CAAC,CAACK,SAAF,GAAcD,QAAQ,CAACE,YAAvB;AACA,aAAKC,QAAL,CAAc;AAACxB,UAAAA,WAAW,EAAE;AAAd,SAAd;AACA,aAAKwB,QAAL,CAAc;AAACtB,UAAAA,UAAU,EAAEc;AAAb,SAAd;AACH;AACJ,KAND;AAOH;;AAEgB,QAAXR,WAAW,GAAE;AACf,UAAMiB,GAAG,GAAGP,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAZ;AACA,UAAMO,OAAO,GAAGR,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,UAAMQ,KAAK,CAAC,wBAAD,EAA2B;AAClCC,MAAAA,MAAM,EAAC,KAD2B;AAElCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFyB,KAA3B,CAAL,CAIDC,IAJC,CAIIC,GAAG,IAAIA,GAAG,CAAC9B,IAAJ,EAJX,EAKD6B,IALC,CAKIC,GAAG,IAAI,KAAKP,QAAL,CAAc;AAAC5B,MAAAA,WAAW,EAAEmC;AAAd,KAAd,CALX,CAAN;AAMA,UAAMJ,KAAK,CAAC,yBAAD,EAA4B;AACnCC,MAAAA,MAAM,EAAC,KAD4B;AAEnCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF0B,KAA5B,CAAL,CAIDC,IAJC,CAIIC,GAAG,IAAIA,GAAG,CAAC9B,IAAJ,EAJX,EAKD6B,IALC,CAKIC,GAAG,IAAI,KAAKP,QAAL,CAAc;AAAC3B,MAAAA,aAAa,EAAEkC;AAAhB,KAAd,CALX,CAAN;AAMA,UAAMJ,KAAK,CAAC,mBAAD,EAAsB;AAC7BC,MAAAA,MAAM,EAAC,KADsB;AAE7BC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFoB,KAAtB,CAAL,CAIDC,IAJC,CAIIC,GAAG,IAAIA,GAAG,CAAC9B,IAAJ,EAJX,EAKD6B,IALC,CAKIC,GAAG,IAAI,KAAKP,QAAL,CAAc;AAAC1B,MAAAA,eAAe,EAAEiC;AAAlB,KAAd,CALX,CAAN;AAMA,QAAIC,SAAS,GAAI,KAAKrC,KAAL,CAAWC,WAAZ,CAAyBqC,SAAzB,CAAmC,CAAnC,EAAqC,KAAKtC,KAAL,CAAWC,WAAX,CAAuBsC,MAAvB,GAA8B,CAAnE,EAAsEC,KAAtE,CAA4E,IAA5E,CAAhB;;AACA,QAAGH,SAAS,CAAC,CAAD,CAAT,KAAiB,EAApB,EAAuB;AACnB;AACH;;AACDA,IAAAA,SAAS,CAACI,OAAV,CAAkB,CAACf,QAAD,EAAWgB,KAAX,KAAqB;AACnC,UAAIA,KAAK,KAAKL,SAAS,CAACE,MAAV,GAAiB,CAA/B,EAAiC;AAC7BF,QAAAA,SAAS,CAACK,KAAD,CAAT,IAAoB,GAApB;AACH;AACJ,KAJD;AAKA,QAAI/B,UAAU,GAAI,KAAKX,KAAL,CAAWE,aAAZ,CAA2BoC,SAA3B,CAAqC,CAArC,EAAuC,KAAKtC,KAAL,CAAWE,aAAX,CAAyBqC,MAAzB,GAAgC,CAAvE,EAA0EC,KAA1E,CAAgF,IAAhF,CAAjB;AACA7B,IAAAA,UAAU,CAAC8B,OAAX,CAAmB,CAACf,QAAD,EAAWgB,KAAX,KAAqB;AACpC,UAAIA,KAAK,KAAK/B,UAAU,CAAC4B,MAAX,GAAkB,CAAhC,EAAkC;AAC9B5B,QAAAA,UAAU,CAAC+B,KAAD,CAAV,IAAqB,GAArB;AACH;AACJ,KAJD;AAKA,QAAI9B,IAAI,GAAI,KAAKZ,KAAL,CAAWG,eAAZ,CAA6BmC,SAA7B,CAAuC,CAAvC,EAAyC,KAAKtC,KAAL,CAAWG,eAAX,CAA2BoC,MAA3B,GAAkC,CAA3E,EAA8EC,KAA9E,CAAoF,IAApF,CAAX;AACA5B,IAAAA,IAAI,CAAC6B,OAAL,CAAa,CAACf,QAAD,EAAWgB,KAAX,KAAqB;AAC9B,UAAIA,KAAK,KAAK9B,IAAI,CAAC2B,MAAL,GAAY,CAA1B,EAA4B;AACxB3B,QAAAA,IAAI,CAAC8B,KAAD,CAAJ,IAAe,GAAf;AACH;AACJ,KAJD;AAKA,SAAKhC,KAAL,GAAa,EAAb;AACA,SAAKC,UAAL,GAAiB,EAAjB;AACA,SAAKC,IAAL,GAAY,EAAZ;;AACA,SAAI,IAAI+B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,SAAS,CAACE,MAA7B,EAAqCI,CAAC,EAAtC,EAA0C;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAS,CAACM,CAAD,CAArB;AACA,UAAIG,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWX,SAAS,CAACM,CAAD,CAApB,CAAR;AACA,WAAKjC,KAAL,CAAWuC,IAAX,CAAgBH,CAAhB;AACH;;AACD,SAAI,IAAIH,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGhC,UAAU,CAAC4B,MAA9B,EAAsCI,CAAC,EAAvC,EAA2C;AACvC,UAAIG,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWrC,UAAU,CAACgC,CAAD,CAArB,CAAR;AACA,WAAKhC,UAAL,CAAgBsC,IAAhB,CAAqBH,CAArB;AACH;;AACD,SAAI,IAAIH,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG/B,IAAI,CAAC2B,MAAxB,EAAgCI,CAAC,EAAjC,EAAqC;AACjC,UAAIG,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWpC,IAAI,CAAC+B,CAAD,CAAf,CAAR;AACA,WAAK/B,IAAL,CAAUqC,IAAV,CAAeH,CAAf;AACH;;AACD,SAAKpC,KAAL,CAAW+B,OAAX,CAAmB,CAACf,QAAD,EAAWgB,KAAX,KAAqB;AACpC,YAAMQ,EAAE,GAAG3B,QAAQ,CAACC,cAAT,CAAwBkB,KAAK,GAAC,CAA9B,CAAX;;AACA,UAAGQ,EAAE,KAAK,IAAV,EAAgB;AACZ,cAAM5B,CAAC,GAAGC,QAAQ,CAAC4B,aAAT,CAAuB,GAAvB,CAAV;AACA7B,QAAAA,CAAC,CAACD,EAAF,GAAOqB,KAAK,GAAG,CAAf;AACApB,QAAAA,CAAC,CAACK,SAAF,GAAcD,QAAQ,CAAC0B,YAAvB;;AACA9B,QAAAA,CAAC,CAAC+B,OAAF,GAAY,MAAM,KAAKrC,eAAL,CAAqBM,CAAC,CAACD,EAAvB,CAAlB;;AACAS,QAAAA,GAAG,CAACwB,WAAJ,CAAgBhC,CAAhB;AACAQ,QAAAA,GAAG,CAACyB,YAAJ,CAAiBjC,CAAjB,EAAoBS,OAApB;AACH;AACJ,KAVD;AAWH;;AAEDhB,EAAAA,WAAW,GAAE;AACT,SAAKF,WAAL;;AACA,SAAI,IAAI8B,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,KAAKjC,KAAL,CAAW6B,MAA/B,EAAuCI,CAAC,EAAxC,EAA2C;AACvC,YAAMrB,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwBmB,CAAxB,CAAV;;AACA,UAAG,KAAK3C,KAAL,CAAWI,aAAd,EAA4B;AACxBkB,QAAAA,CAAC,CAACkC,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACA,cAAMC,CAAC,GAAGnC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAV;AACAkC,QAAAA,CAAC,CAAC/B,SAAF,GAAc,EAAd;AACH,OAJD,MAKK;AACDL,QAAAA,CAAC,CAACkC,KAAF,CAAQC,OAAR,GAAkB,OAAlB;AACH;AACJ;;AACD,SAAK5B,QAAL,CAAc;AAACzB,MAAAA,aAAa,EAAE,CAAC,KAAKJ,KAAL,CAAWI,aAA5B;AACMC,MAAAA,WAAW,EAAE,KADnB;AAEME,MAAAA,UAAU,EAAE;AAFlB,KAAd;AAGH;;AAEDa,EAAAA,UAAU,CAACuC,IAAD,EAAOC,YAAP,EAAoB;AAC1B,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAGF,IAAI,CAACG,QAAL,CAAc,GAAd,KAAsBH,IAAI,CAACG,QAAL,CAAc,GAAd,CAAzB,EAA6C;AACzC,WAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,IAAI,CAACpB,MAAzB,EAAiCI,CAAC,EAAlC,EAAsC;AAClC,YAAIgB,IAAI,CAAChB,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACjBkB,UAAAA,KAAK,GAAGlB,CAAR;AACH,SAFD,MAGK,IAAIgB,IAAI,CAAChB,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACtB,cAAIkB,KAAK,KAAK,IAAd,EAAoB;AAChBD,YAAAA,YAAY,CAACX,IAAb,CAAkBU,IAAI,CAACI,KAAL,CAAWF,KAAK,GAAG,CAAnB,EAAsBlB,CAAtB,CAAlB;AACA,gBAAIqB,OAAO,GAAGL,IAAI,CAACM,OAAL,CAAaN,IAAI,CAACI,KAAL,CAAWF,KAAX,EAAkBlB,CAAC,GAAG,CAAtB,CAAb,EAAuC,EAAvC,CAAd;AACA,iBAAKvB,UAAL,CAAgB4C,OAAhB;AACA;AACH;AACJ;AACJ;AACJ;AACJ;;AAED7C,EAAAA,aAAa,GAAE;AACX,UAAMb,IAAI,GAAG,KAAKN,KAAL,CAAWM,IAAX,CAAgBkC,KAAhB,CAAsB,GAAtB,CAAb;;AACA,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAMrC,IAAI,CAACiC,MAAL,GAAc,CAAf,GAAmB,CAAxC,EAA4CI,CAAC,IAAE,CAA/C,EAAiD;AAC7CrC,MAAAA,IAAI,CAAC4D,MAAL,CAAYvB,CAAZ,EAAe,CAAf,EAAkB,GAAlB;AACH;;AACDrC,IAAAA,IAAI,CAACmC,OAAL,CAAakB,IAAI,IAAI;AACjB,WAAKvC,UAAL,CAAgBuC,IAAhB,EAAsB,EAAtB;AACH,KAFD;AAGAf,IAAAA,OAAO,CAACC,GAAR,CAAYvC,IAAZ;AACH;;AAEoB,QAAfW,eAAe,GAAE;AACnB,UAAMkD,IAAI,GAAG5C,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAb;AACA2C,IAAAA,IAAI,CAACX,KAAL,CAAWC,OAAX,GAAqB,OAArB;AACA,UAAMW,IAAI,GAAG7C,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AACA,UAAM6C,EAAE,GAAG9C,QAAQ,CAACC,cAAT,CAAwB,IAAxB,CAAX;AACA,UAAM8C,KAAK,GAAG/C,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AACA,UAAM+C,SAAS,GAAGhD,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;AACA,UAAME,QAAQ,GAAI,KAAKhB,KAAL,CAAWe,MAAX,CAAkB+C,IAAI,IAAIA,IAAI,CAACnD,EAAL,IAAW,KAAKrB,KAAL,CAAWO,UAAhD,CAAD,CAA8D,CAA9D,CAAjB;AACA,SAAKsB,QAAL,CAAc;AAACrB,MAAAA,IAAI,EAAE,IAAP;AAAaF,MAAAA,IAAI,EAAEoB,QAAQ,CAACE;AAA5B,KAAd;AACA,UAAMjB,UAAU,GAAG,KAAKA,UAAL,CAAgBc,MAAhB,CAAuB+C,IAAI,IAAIA,IAAI,CAACC,OAAL,IAAgB,KAAKzE,KAAL,CAAWO,UAA1D,CAAnB;AACA,UAAMK,IAAI,GAAG,KAAKA,IAAL,CAAUa,MAAV,CAAiB+C,IAAI,IAAIA,IAAI,CAACC,OAAL,IAAgB,KAAKzE,KAAL,CAAWO,UAApD,CAAb;AACA,UAAMK,IAAI,CAAC6B,OAAL,CAAaiC,CAAC,IAAI;AACpB,YAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAK7E,KAAL,CAAWS,SAAzB,EAAoC;AAAC,SAACiE,CAAC,CAACI,OAAH,GAAa;AAAd,OAApC,CAAb;AACA,WAAKjD,QAAL,CAAc;AAACpB,QAAAA,SAAS,EAAGkE;AAAb,OAAd;AACH,KAHK,CAAN;AAIA,UAAM/D,IAAI,CAAC6B,OAAL,CAAa,CAACf,QAAD,EAAWgB,KAAX,KAAqB;AACpC,YAAMqC,KAAK,GAAGxD,QAAQ,CAAC4B,aAAT,CAAuB,OAAvB,CAAd;AACA,YAAM6B,KAAK,GAAGzD,QAAQ,CAAC4B,aAAT,CAAuB,OAAvB,CAAd;AACA6B,MAAAA,KAAK,CAAC3D,EAAN,GAAW,OAAOqB,KAAK,GAAG,CAAf,CAAX;;AACAsC,MAAAA,KAAK,CAACC,QAAN,GAAkBC,CAAD,IAAO;AACpB,aAAK/D,aAAL;AACA,aAAKU,QAAL,CAAcsD,SAAS,KAAK;AACxB1E,UAAAA,SAAS,EAAG,EACR,GAAG0E,SAAS,CAAC1E,SADL;AAER,aAACiB,QAAQ,CAACoD,OAAV,GAAqBI,CAAC,CAACE,MAAF,CAASC;AAFtB;AADY,SAAL,CAAvB;AAMH,OARD;;AASAN,MAAAA,KAAK,CAACpD,SAAN,GAAkBD,QAAQ,CAACoD,OAA3B;AACAC,MAAAA,KAAK,CAACO,OAAN,GAAgB,OAAO5C,KAAK,GAAG,CAAf,CAAhB;AACAqC,MAAAA,KAAK,CAACvB,KAAN,CAAYC,OAAZ,GAAsB,OAAtB;AACAU,MAAAA,IAAI,CAACb,WAAL,CAAiByB,KAAjB;AACAZ,MAAAA,IAAI,CAACb,WAAL,CAAiB0B,KAAjB;AACAb,MAAAA,IAAI,CAACZ,YAAL,CAAkByB,KAAlB,EAAyBT,SAAzB;AACAJ,MAAAA,IAAI,CAACZ,YAAL,CAAkBwB,KAAlB,EAAyBC,KAAzB;AACH,KApBK,CAAN;AAqBAZ,IAAAA,IAAI,CAACiB,KAAL,GAAa3D,QAAQ,CAAC6D,YAAtB;AACA5E,IAAAA,UAAU,CAAC8B,OAAX,CAAmB+C,SAAS,IAAInB,EAAE,CAACgB,KAAH,IAAYG,SAAS,CAACC,KAAtD;AACAnB,IAAAA,KAAK,CAACe,KAAN,GAAc3D,QAAQ,CAACgE,aAAvB;AACH;;AAEDxE,EAAAA,QAAQ,GAAE;AACN,UAAMkD,IAAI,GAAG7C,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgC6D,KAA7C;AACA,UAAMhB,EAAE,GAAG9C,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8B6D,KAAzC;AACA,UAAMf,KAAK,GAAG/C,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiC6D,KAA/C;AACA,UAAM/E,IAAI,GAAGiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgC6D,KAA7C;AACArD,IAAAA,KAAK,CAAC,mBAAD,EAAsB;AACvBC,MAAAA,MAAM,EAAC,MADgB;AAEvBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFc;AAGvByD,MAAAA,IAAI,EAAE5C,IAAI,CAAC6C,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAE,6BADW;AAEjBC,QAAAA,IAAI,EAAE,aAFW;AAGjB1B,QAAAA,IAAI,EAAEA,IAHW;AAIjBC,QAAAA,EAAE,EAAEA,EAJa;AAKjB0B,QAAAA,OAAO,EAAEzB,KALQ;AAMjBhE,QAAAA,IAAI,EAAEA;AANW,OAAf;AAHiB,KAAtB,CAAL,CAYK6B,IAZL,CAYUC,GAAG,IAAIA,GAAG,CAAC9B,IAAJ,EAZjB,EAaK6B,IAbL,CAaUC,GAAG,IAAI,KAAKP,QAAL,CAAc;AAAC5B,MAAAA,WAAW,EAAEmC;AAAd,KAAd,CAbjB;AAcH;;AAED4D,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AACA;AACA;AACA;AACA;AAAA,mBACK,CAAC,KAAKhG,KAAL,CAAWQ,IAAZ,iBAAoB;AAAK,UAAA,EAAE,EAAE,iBAAT;AAAA,kCACjB;AAAM,YAAA,EAAE,EAAE,kBAAV;AAAA,oCACI;AAAG,cAAA,EAAE,EAAE,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,EAAE,EAAE,SAAP;AAAkB,cAAA,OAAO,EAAE,KAAKO,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADiB,eAKjB;AAAA,oCACI;AAAG,cAAA,EAAE,EAAE;AAAP;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEK,KAAKf,KAAL,CAAWK,WAAX,iBAA0B;AAAQ,cAAA,EAAE,EAAE,mBAAZ;AAAiC,cAAA,OAAO,EAAE,KAAKY,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBALiB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADzB,eAWI;AAAM,UAAA,EAAE,EAAE,UAAV;AAAsB,UAAA,KAAK,EAAE;AAAC,uBAAW;AAAZ,WAA7B;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAsB,YAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAE,MAAX;AAAmB,YAAA,IAAI,EAAC,OAAxB;AAAgC,YAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAO,YAAA,OAAO,EAAE,IAAhB;AAAsB,YAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAO,YAAA,EAAE,EAAE,IAAX;AAAiB,YAAA,IAAI,EAAC,OAAtB;AAA8B,YAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAO,YAAA,OAAO,EAAE,OAAhB;AAAyB,YAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAO,YAAA,EAAE,EAAE,OAAX;AAAoB,YAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAO,YAAA,OAAO,EAAE,MAAhB;AAAwB,YAAA,SAAS,EAAE,MAAnC;AAA2C,YAAA,EAAE,EAAE,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAO,YAAA,EAAE,EAAE,MAAX;AAAmB,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWM,IAAX,GAAkB,KAAKN,KAAL,CAAWS,SAAX,CAAqBwF,IAAjE;AAAuE,YAAA,SAAS,EAAE;AAAlF;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAQ,YAAA,EAAE,EAAE,QAAZ;AAAsB,YAAA,IAAI,EAAE,QAA5B;AAAsC,YAAA,SAAS,EAAE,MAAjD;AAAyD,YAAA,OAAO,EAAE,KAAK/E,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AA6BH;;AAxP8B;;AA2PnC,eAAerB,WAAf","sourcesContent":["import React, { Component } from \"react\"\n\nclass UseTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            apiResponse:\"\",\n            apiResponseTo:\"\",\n            apiResponseVars:\"\",\n            myTempIsClick: false,\n            tempClicked: false,\n            text: \"\",\n            templateId: null,\n            send: false,\n            variables: {}\n        }\n        this.words = []\n        this.recipients = []\n        this.vars = []\n        this.myTemplates = this.myTemplates.bind(this)\n        this.showMyTemps = this.showMyTemps.bind(this)\n        this.templateOnClick = this.templateOnClick.bind(this)\n        this.UseTemplateFunc = this.UseTemplateFunc.bind(this)\n        this.sendMail = this.sendMail.bind(this)\n        this.textGenerator = this.textGenerator.bind(this)\n        this.wordFinder = this.wordFinder.bind(this)\n    }\n\n    templateOnClick(id){\n        const p = document.getElementById(\"example\")\n        this.words.filter(template => {\n            if(template.id == id){\n                p.innerHTML = template.templateText\n                this.setState({tempClicked: true})\n                this.setState({templateId: id})\n            }\n        })\n    }\n\n    async myTemplates(){\n        const div = document.getElementById(\"useTemplatesMenu\")\n        const myTemps = document.getElementById(\"myTemps\")\n        await fetch(\"/useTemplate/templates\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n        await fetch(\"/useTemplate/recipients\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponseTo: res}))\n        await fetch(\"/useTemplate/vars\", {\n            method:'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponseVars: res}))\n        let templates = (this.state.apiResponse).substring(1,this.state.apiResponse.length-1).split('},')\n        if(templates[0] === \"\"){\n            return\n        }\n        templates.forEach((template, index) => {\n            if (index !== templates.length-1){\n                templates[index] += \"}\"\n            }\n        })\n        let recipients = (this.state.apiResponseTo).substring(1,this.state.apiResponseTo.length-1).split('},')\n        recipients.forEach((template, index) => {\n            if (index !== recipients.length-1){\n                recipients[index] += \"}\"\n            }\n        })\n        let vars = (this.state.apiResponseVars).substring(1,this.state.apiResponseVars.length-1).split('},')\n        vars.forEach((template, index) => {\n            if (index !== vars.length-1){\n                vars[index] += \"}\"\n            }\n        })\n        this.words = []\n        this.recipients =[]\n        this.vars = []\n        for(let i = 0; i < templates.length; i++) {\n            console.log(templates[i])\n            let a = JSON.parse(templates[i])\n            this.words.push(a)\n        }\n        for(let i = 0; i < recipients.length; i++) {\n            let a = JSON.parse(recipients[i])\n            this.recipients.push(a)\n        }\n        for(let i = 0; i < vars.length; i++) {\n            let a = JSON.parse(vars[i])\n            this.vars.push(a)\n        }\n        this.words.forEach((template, index) => {\n            const ep = document.getElementById(index+1)\n            if(ep === null) {\n                const p = document.createElement(\"p\")\n                p.id = index + 1\n                p.innerHTML = template.templateName\n                p.onclick = () => this.templateOnClick(p.id)\n                div.appendChild(p)\n                div.insertBefore(p, myTemps)\n            }\n        })\n    }\n\n    showMyTemps(){\n        this.myTemplates()\n        for(let i = 1; i <= this.words.length; i++){\n            const p = document.getElementById(i)\n            if(this.state.myTempIsClick){\n                p.style.display = \"none\"\n                const g = document.getElementById(\"example\")\n                g.innerHTML = \"\"\n            }\n            else {\n                p.style.display = \"block\"\n            }\n        }\n        this.setState({myTempIsClick: !this.state.myTempIsClick,\n                            tempClicked: false,\n                            templateId: null})\n    }\n\n    wordFinder(word, wordsForData){\n        let start = null\n        if(word.includes(\"{\") && word.includes(\"}\")) {\n            for (let i = 0; i < word.length; i++) {\n                if (word[i] === \"{\") {\n                    start = i\n                }\n                else if (word[i] === \"}\") {\n                    if (start !== null) {\n                        wordsForData.push(word.slice(start + 1, i))\n                        let newWord = word.replace(word.slice(start, i + 1), \"\")\n                        this.wordFinder(newWord)\n                        return\n                    }\n                }\n            }\n        }\n    }\n\n    textGenerator(){\n        const text = this.state.text.split(\" \")\n        for(let i = 1; i <= ((text.length * 2) -1); i+=2){\n            text.splice(i, 0, \" \")\n        }\n        text.forEach(word => {\n            this.wordFinder(word, [])\n        })\n        console.log(text)\n    }\n\n    async UseTemplateFunc(){\n        const form = document.getElementById(\"sendForm\")\n        form.style.display = \"block\"\n        const from = document.getElementById(\"from\")\n        const to = document.getElementById(\"to\")\n        const title = document.getElementById(\"title\")\n        const textLabel = document.getElementById(\"textLabel\")\n        const template = (this.words.filter(temp => temp.id == this.state.templateId))[0]\n        this.setState({send: true, text: template.templateText})\n        const recipients = this.recipients.filter(temp => temp.tableId == this.state.templateId)\n        const vars = this.vars.filter(temp => temp.tableId == this.state.templateId)\n        await vars.forEach(v => {\n            const copy = Object.assign(this.state.variables, {[v.varName]: \"\"})\n            this.setState({variables : copy})\n        })\n        await vars.forEach((template, index) => {\n            const label = document.createElement(\"label\")\n            const input = document.createElement(\"input\")\n            input.id = \"t\" + (index + 1)\n            input.onchange = (e) => {\n                this.textGenerator()\n                this.setState(prevState => ({\n                    variables : {\n                        ...prevState.variables,\n                        [template.varName] : e.target.value\n                    }\n                }))\n            }\n            label.innerHTML = template.varName\n            label.htmlFor = \"t\" + (index + 1)\n            label.style.display = \"block\"\n            form.appendChild(label)\n            form.appendChild(input)\n            form.insertBefore(input, textLabel)\n            form.insertBefore(label, input)\n        })\n        from.value = template.templateFrom\n        recipients.forEach(recipient => to.value += recipient.email)\n        title.value = template.templateTitle\n    }\n\n    sendMail(){\n        const from = document.getElementById(\"from\").value\n        const to = document.getElementById(\"to\").value\n        const title = document.getElementById(\"title\").value\n        const text = document.getElementById(\"text\").value\n        fetch(\"/useTemplate/send\", {\n            method:'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                user: \"gorsimonyan200307@gmail.com\",\n                pass: \"gor07072003\",\n                from: from,\n                to: to,\n                subject: title,\n                text: text\n            })\n        })\n            .then(res => res.text())\n            .then(res => this.setState({apiResponse: res}))\n    }\n\n    render() {\n        return (\n            // <Menu width={'150px'} >\n            //     <p id={\"defaultTemplates\"} className={\"templateMenu\"}>Default Templates</p>\n            //     <p id={\"myTemplates\"} className={\"templateMenu\"}>My Templates</p>\n            // </Menu>\n            <div>\n                {!this.state.send && <div id={\"useTempsGeneral\"}>\n                    <span id={\"useTemplatesMenu\"}>\n                        <p id={\"defTemps\"}>Default Templates</p>\n                        <p id={\"myTemps\"} onClick={this.showMyTemps}>My Templates</p>\n                    </span>\n                    <span>\n                        <p id={\"example\"}></p>\n                        {this.state.tempClicked && <button id={\"useTemplateButton\"} onClick={this.UseTemplateFunc}>Use</button>}\n                    </span>\n                </div>}\n                <form id={\"sendForm\"} style={{\"display\": \"none\"}}>\n                    <label htmlFor=\"from\" className=\"form\">from</label>\n                    <input id={\"from\"} type=\"email\" className=\"form\"/>\n                    <label htmlFor={\"to\"} className=\"form\">To</label>\n                    <input id={\"to\"} type=\"email\" className=\"form\"/>\n                    <label htmlFor={\"title\"} className=\"form\">title</label>\n                    <input id={\"title\"} className=\"form\"/>\n                    <label htmlFor={\"text\"} className={\"form\"} id={\"textLabel\"}>Text</label>\n                    <input id={\"text\"} value={this.state.text + this.state.variables.name} className={\"form\"}/>\n                    <button id={\"submit\"} type={\"submit\"} className={\"form\"} onClick={this.sendMail}>Send</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UseTemplate"]},"metadata":{},"sourceType":"module"}